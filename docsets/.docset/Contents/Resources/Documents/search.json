{"Typealiases.html#/s:17OpenHealthCardKit3ATRa":{"name":"ATR","abstract":"<p>Answer-to-reset is of Type Data</p>"},"Typealiases.html#/s:17OpenHealthCardKit22AutCertificateResponsea":{"name":"AutCertificateResponse","abstract":"<p>Alias for the certificate response that holds the raw certificate + the AutCertInfo associated with it.</p>"},"Typealiases.html#/s:17OpenHealthCardKit18ECPointCoordinatesa":{"name":"ECPointCoordinates","abstract":"<p>Alias for <code>(x: BigInt, y: BigInt)</code></p>"},"Structs/EllipticCurve.html#/s:17OpenHealthCardKit13EllipticCurveV15brainpoolP256r1ACvpZ":{"name":"brainpoolP256r1","abstract":"<p>BrainpoolP256r1 curve</p>","parent_name":"EllipticCurve"},"Structs/EllipticCurve.html#/s:17OpenHealthCardKit13EllipticCurveV14inverseModular1k1p6BigIntAGVAH_AHtFZ":{"name":"inverseModular(k:p:)","abstract":"<p>Returns the inverse of k modulo p.","parent_name":"EllipticCurve"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit0bC8ResponseV8responseAA0E4Type_pvp":{"name":"response","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ResponseType.html\">ResponseType</a></code> holding the response data.</p>","parent_name":"HealthCardResponse"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit0bC8ResponseV14responseStatusAA0eG0Ovp":{"name":"responseStatus","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ResponseStatus.html\">ResponseStatus</a></code> derived from the executed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HealthCardCommand.html\">HealthCardCommand</a></code> and <em>sw</em> value of `ResponseType</p>","parent_name":"HealthCardResponse"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit12ResponseTypeP4data10Foundation4DataVSgvp":{"name":"data","parent_name":"HealthCardResponse"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit12ResponseTypeP2nrSivp":{"name":"nr","parent_name":"HealthCardResponse"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit12ResponseTypeP3sw1s5UInt8Vvp":{"name":"sw1","parent_name":"HealthCardResponse"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit12ResponseTypeP3sw2s5UInt8Vvp":{"name":"sw2","parent_name":"HealthCardResponse"},"Structs/HealthCardResponse.html#/s:17OpenHealthCardKit12ResponseTypeP2sws6UInt16Vvp":{"name":"sw","parent_name":"HealthCardResponse"},"Structs/CardVersion2/Error.html#/s:17OpenHealthCardKit0C8Version2V5ErrorO05parseF0yAESScAEmF":{"name":"parseError(_:)","abstract":"<p>In case of a parse error upon initializing CardVersion2 from ASN.1 Data</p>","parent_name":"Error"},"Structs/CardVersion2/Error.html":{"name":"Error","abstract":"<p>CardVersion2 Error</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V26fillingInstructionsVersion10Foundation4DataVvp":{"name":"fillingInstructionsVersion","abstract":"<p>Information of C0 with version of filling instruction for version2</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V19objectSystemVersion10Foundation4DataVvp":{"name":"objectSystemVersion","abstract":"<p>Information of C1 with version of card object system</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V40productIdentificationObjectSystemVersion10Foundation4DataVvp":{"name":"productIdentificationObjectSystemVersion","abstract":"<p>Information of C2 with version of product identification object system</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V31fillingInstructionsEfGdoVersion10Foundation4DataVvp":{"name":"fillingInstructionsEfGdoVersion","abstract":"<p>Information of C4 with version of filling instruction for EF.GDO</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V31fillingInstructionsEfAtrVersion10Foundation4DataVvp":{"name":"fillingInstructionsEfAtrVersion","abstract":"<p>Information of C5 with version of filling instruction for EF.ATR</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V35fillingInstructionsEfKeyInfoVersion10Foundation4DataVSgvp":{"name":"fillingInstructionsEfKeyInfoVersion","abstract":"<p>Information of C6 with version of filling instruction for EF.KeyInfo</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V47fillingInstructionsEfEnvironmentSettingsVersion10Foundation4DataVSgvp":{"name":"fillingInstructionsEfEnvironmentSettingsVersion","abstract":"<p>Information of C3 with version of filling instruction for Environment Settings</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V35fillingInstructionsEfLoggingVersion10Foundation4DataVSgvp":{"name":"fillingInstructionsEfLoggingVersion","abstract":"<p>Information of C7 with version of filling instruction for EF.GDO</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V4dataAC10Foundation4DataV_tKcfc":{"name":"init(data:)","abstract":"<p>Parse a CardVersion2 model from ASN.1 encoded data</p>","parent_name":"CardVersion2"},"Structs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V10generationAA0C10GenerationOSgyF":{"name":"generation()","abstract":"<p>Parse the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CardVersion2.html#/s:17OpenHealthCardKit0C8Version2V19objectSystemVersion10Foundation4DataVvp\">objectSystemVersion</a></code> parameter to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/CardGeneration.html\">CardGeneration</a></code> or nil when unknown/unsupported.</p>","parent_name":"CardVersion2"},"Structs/CAN/InvalidCAN.html#/s:17OpenHealthCardKit3CANV07InvalidE0O12illegalValueyAESi_SSSnySiGtcAEmF":{"name":"illegalValue(_:for:expected:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidCAN"},"Structs/CAN/InvalidCAN.html":{"name":"InvalidCAN","abstract":"<p>Undocumented</p>","parent_name":"CAN"},"Structs/CAN.html#/s:17OpenHealthCardKit3CANV8rawValue10Foundation4DataVvp":{"name":"rawValue","abstract":"<p>CAN Number</p>","parent_name":"CAN"},"Structs/CAN.html#/s:17OpenHealthCardKit3CANV4fromyAC10Foundation4DataVKFZ":{"name":"from(_:)","abstract":"<p>Create and validate a CAN from Data</p>","parent_name":"CAN"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV2MFAA09DedicatedF0VvpZ":{"name":"MF","abstract":"<p>MF (root)</p>","parent_name":"DF"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV3HPAAA09DedicatedF0VvpZ":{"name":"HPA","abstract":"<p>MF/DF.HPA</p>","parent_name":"DF"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV3QESAA09DedicatedF0VvpZ":{"name":"QES","abstract":"<p>MF/DF.QES</p>","parent_name":"DF"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV5ESIGNAA09DedicatedF0VvpZ":{"name":"ESIGN","abstract":"<p>MF/DF.ESIGN</p>","parent_name":"DF"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV6CIAQESAA09DedicatedF0VvpZ":{"name":"CIAQES","abstract":"<p>MF/DF.CIA.QES</p>","parent_name":"DF"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV8CIAESIGNAA09DedicatedF0VvpZ":{"name":"CIAESIGN","abstract":"<p>MF/DF.CIA.ESIGN</p>","parent_name":"DF"},"Structs/HbaFileSystem/DF.html#/s:17OpenHealthCardKit13HbaFileSystemV2DFV4AUTOAA09DedicatedF0VvpZ":{"name":"AUTO","abstract":"<p>MF/DF.AUTO</p>","parent_name":"DF"},"Structs/HbaFileSystem/EF.html#/s:17OpenHealthCardKit13HbaFileSystemV2EFV3atrAA010ElementaryF0VvpZ":{"name":"atr","abstract":"<p>MF/EF.ATR: Transparent Elementary File - Answer to reset</p>","parent_name":"EF"},"Structs/HbaFileSystem/EF.html#/s:17OpenHealthCardKit13HbaFileSystemV2EFV10cardAccessAA010ElementaryF0VvpZ":{"name":"cardAccess","abstract":"<p>MF/EF.CardAccess</p>","parent_name":"EF"},"Structs/HbaFileSystem/EF.html#/s:17OpenHealthCardKit13HbaFileSystemV2EFV3dirAA010ElementaryF0VvpZ":{"name":"dir","abstract":"<p>MF/EF.DIR: Linear variable Elementary File - list application templates</p>","parent_name":"EF"},"Structs/HbaFileSystem/EF.html#/s:17OpenHealthCardKit13HbaFileSystemV2EFV3gdoAA010ElementaryF0VvpZ":{"name":"gdo","abstract":"<p>MF/EF.GDO: Transparent Elementary File</p>","parent_name":"EF"},"Structs/HbaFileSystem/EF.html#/s:17OpenHealthCardKit13HbaFileSystemV2EFV8version2AA010ElementaryF0VvpZ":{"name":"version2","abstract":"<p>MF/EF.VERSION2</p>","parent_name":"EF"},"Structs/HbaFileSystem/EF.html":{"name":"EF","abstract":"<p>Elementary File identifier</p>","parent_name":"HbaFileSystem"},"Structs/HbaFileSystem/DF.html":{"name":"DF","abstract":"<p>Dedicated File Identifier</p>","parent_name":"HbaFileSystem"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO5pinCHyA2EmF":{"name":"pinCH","abstract":"<p>PIN CH</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO9mrpinHomeyA2EmF":{"name":"mrpinHome","abstract":"<p>MR.PIN.HOME</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO8mrpinNFDyA2EmF":{"name":"mrpinNFD","abstract":"<p>MR.PIN.NFD</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO12mrpinNFDREADyA2EmF":{"name":"mrpinNFDREAD","abstract":"<p>MR.PIN.NFD.READ</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO8mrpinDPEyA2EmF":{"name":"mrpinDPE","abstract":"<p>MR.PIN.DPE</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO12mrpinDPEREADyA2EmF":{"name":"mrpinDPEREAD","abstract":"<p>MR.PIN.DPEREAD</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO8mprinGDDyA2EmF":{"name":"mprinGDD","abstract":"<p>MR.PIN.GDD</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO8mrpinOSEyA2EmF":{"name":"mrpinOSE","abstract":"<p>MR.PIN.OSE</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO9mrpinAMTSyA2EmF":{"name":"mrpinAMTS","abstract":"<p>MR.PIN.AMTS</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO10pinAMTSREPyA2EmF":{"name":"pinAMTSREP","abstract":"<p>MR.PIN.AMTSREP</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:17OpenHealthCardKit13EgkFileSystemV3PinO6pinQESyA2EmF":{"name":"pinQES","abstract":"<p>MR.PIN.QES</p>","parent_name":"Pin"},"Structs/EgkFileSystem/Pin.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Pin"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV2MFAA09DedicatedF0VvpZ":{"name":"MF","abstract":"<p>MF (root)</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV3HCAAA09DedicatedF0VvpZ":{"name":"HCA","abstract":"<p>MF/DF.HCA</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV5ESIGNAA09DedicatedF0VvpZ":{"name":"ESIGN","abstract":"<p>MF/DF.ESIGN</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV3QESAA09DedicatedF0VvpZ":{"name":"QES","abstract":"<p>MF/DF.QES</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV3NFDAA09DedicatedF0VvpZ":{"name":"NFD","abstract":"<p>MF/DF.NFD</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV3DPEAA09DedicatedF0VvpZ":{"name":"DPE","abstract":"<p>MF/DF.DPE</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV3GDDAA09DedicatedF0VvpZ":{"name":"GDD","abstract":"<p>MF/DF.GDD</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV3OSEAA09DedicatedF0VvpZ":{"name":"OSE","abstract":"<p>MF/DF.OSE</p>","parent_name":"DF"},"Structs/EgkFileSystem/DF.html#/s:17OpenHealthCardKit13EgkFileSystemV2DFV4AMTSAA09DedicatedF0VvpZ":{"name":"AMTS","abstract":"<p>MF/DF.AMTS</p>","parent_name":"DF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV3atrAA010ElementaryF0VvpZ":{"name":"atr","abstract":"<p>MF/EF.ATR: Transparent Elementary File - Answer to reset</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV10cardAccessAA010ElementaryF0VvpZ":{"name":"cardAccess","abstract":"<p>MF/EF.CardAccess</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV03cCaE6CsE256AA010ElementaryF0VvpZ":{"name":"cCaEgkCsE256","abstract":"<p>MF/EF.C.CA_eGK.CS.E256</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV01cE10AutCVCE256AA010ElementaryF0VvpZ":{"name":"cEgkAutCVCE256","abstract":"<p>MF/EF.C.eGK.AUT_CVC.E256</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV3dirAA010ElementaryF0VvpZ":{"name":"dir","abstract":"<p>MF/EF.DIR: Linear variable Elementary File - list application templates</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV3gdoAA010ElementaryF0VvpZ":{"name":"gdo","abstract":"<p>MF/EF.GDO: Transparent Elementary File</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV7versionAA010ElementaryF0VvpZ":{"name":"version","abstract":"<p>MF/EF.VERSION</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV8version2AA010ElementaryF0VvpZ":{"name":"version2","abstract":"<p>MF/EF.VERSION2</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV3nfdAA010ElementaryF0VvpZ":{"name":"nfd","abstract":"<p>MF/DF.NFD.EF.NFD</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV15hcaEinwilligungAA010ElementaryF0VvpZ":{"name":"hcaEinwilligung","abstract":"<p>MF/DF.HCA.EF.Einwilligung</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV6hcaGVDAA010ElementaryF0VvpZ":{"name":"hcaGVD","abstract":"<p>MF/DF.HCA.EF.GVD</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV10hcaLoggingAA010ElementaryF0VvpZ":{"name":"hcaLogging","abstract":"<p>MF/DF.HCA.EF.Logging</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV5hcaPDAA010ElementaryF0VvpZ":{"name":"hcaPD","abstract":"<p>MF/DF.HCA.EF.PD</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV20hcaPruefungsnachweisAA010ElementaryF0VvpZ":{"name":"hcaPruefungsnachweis","abstract":"<p>MF/DF.HCA.EF.Prüfungsnachweis</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV13hcaStandaloneAA010ElementaryF0VvpZ":{"name":"hcaStandalone","abstract":"<p>MF/DF.HCA.EF.Standalone</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV11hcaStatusVDAA010ElementaryF0VvpZ":{"name":"hcaStatusVD","abstract":"<p>MF/DF.HCA.EF.StatusVD</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV6hcaTTNAA010ElementaryF0VvpZ":{"name":"hcaTTN","abstract":"<p>MF/DF.HCA.EF.TTN</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV5hcaVDAA010ElementaryF0VvpZ":{"name":"hcaVD","abstract":"<p>MF/DF.HCA.EF.VD</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV10hcaVerweisAA010ElementaryF0VvpZ":{"name":"hcaVerweis","abstract":"<p>MF/DF.HCA.EF.Verweis</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV16esignCChAutR2048AA010ElementaryF0VvpZ":{"name":"esignCChAutR2048","abstract":"<p>MF/DF.ESIGN.EF.C.CH.AUT.R2048</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV15esignCChAutE256AA010ElementaryF0VvpZ":{"name":"esignCChAutE256","abstract":"<p>MF/DF.ESIGN.EF.C.CH.AUT.E256</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV17esignCChAutnR2048AA010ElementaryF0VvpZ":{"name":"esignCChAutnR2048","abstract":"<p>MF/DF.ESIGN.EF.AUTN</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV16esignCChEncR2048AA010ElementaryF0VvpZ":{"name":"esignCChEncR2048","abstract":"<p>MF/DF.ESIGN.EF.ENC</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html#/s:17OpenHealthCardKit13EgkFileSystemV2EFV17esignCChEncvR2048AA010ElementaryF0VvpZ":{"name":"esignCChEncvR2048","abstract":"<p>MF/DF.ESIGN.EF.ENCV</p>","parent_name":"EF"},"Structs/EgkFileSystem/EF.html":{"name":"EF","abstract":"<p>Elementary File identifier</p>","parent_name":"EgkFileSystem"},"Structs/EgkFileSystem/DF.html":{"name":"DF","abstract":"<p>Dedicated File Identifier</p>","parent_name":"EgkFileSystem"},"Structs/EgkFileSystem/Pin.html":{"name":"Pin","abstract":"<p>Pin</p>","parent_name":"EgkFileSystem"},"Structs/HealthCardCommand/Verify.html#/s:17OpenHealthCardKit0bC7CommandV6VerifyV0F17PasswordParametera":{"name":"VerifyPasswordParameter","abstract":"<p>Verify password command parameters</p>","parent_name":"Verify"},"Structs/HealthCardCommand/Verify.html#/s:17OpenHealthCardKit0bC7CommandV6VerifyV6verify8passwordAcA8PasswordVAG_Sb10dfSpecificAA10Format2PinV3pint_tFZ":{"name":"verify(password:)","abstract":"<p>Use case Change Password Secret (Pin) gemSpec_COS#14.6.6.1</p>","parent_name":"Verify"},"Structs/HealthCardCommand/Status.html#/s:17OpenHealthCardKit0bC7CommandV6StatusV06GetPinF9Parametera":{"name":"GetPinStatusParameter","abstract":"<p>Get Pin Status command parameters</p>","parent_name":"Status"},"Structs/HealthCardCommand/Status.html#/s:17OpenHealthCardKit0bC7CommandV6StatusV6status3forAcA8PasswordV8password_Sb10dfSpecifict_tFZ":{"name":"status(for:)","abstract":"<p>Use case Get Pin Status gemSpec_COS#14.6.4.1</p>","parent_name":"Status"},"Structs/HealthCardCommand/EnableVerificationRequirement.html#/s:17OpenHealthCardKit0bC7CommandV29EnableVerificationRequirementV0gH17PasswordParametera":{"name":"VerificationRequirementPasswordParameter","abstract":"<p>Set password command parameters</p>","parent_name":"EnableVerificationRequirement"},"Structs/HealthCardCommand/EnableVerificationRequirement.html#/s:17OpenHealthCardKit0bC7CommandV29EnableVerificationRequirementV6enable8passwordAcA8PasswordVAG_Sb10dfSpecificAA10Format2PinVSg16verificationDatat_tKFZ":{"name":"enable(password:)","abstract":"<p>Use case Enable Verification Requirement gemSpec_COS#14.6.3.1 + 14.6.3.2</p>","parent_name":"EnableVerificationRequirement"},"Structs/HealthCardCommand/DisableVerificationRequirement.html#/s:17OpenHealthCardKit0bC7CommandV30DisableVerificationRequirementV0gH17PasswordParametera":{"name":"VerificationRequirementPasswordParameter","abstract":"<p>Set password command parameters</p>","parent_name":"DisableVerificationRequirement"},"Structs/HealthCardCommand/DisableVerificationRequirement.html#/s:17OpenHealthCardKit0bC7CommandV30DisableVerificationRequirementV7disable8passwordAcA8PasswordVAG_Sb10dfSpecificAA10Format2PinVSg16verificationDatat_tKFZ":{"name":"disable(password:)","abstract":"<p>Use case Disable Verification Requirement gemSpec_COS#14.6.2.1 + 14.6.2.2</p>","parent_name":"DisableVerificationRequirement"},"Structs/HealthCardCommand/ChangeReferenceData.html#/s:17OpenHealthCardKit0bC7CommandV19ChangeReferenceDataV0F17PasswordParametera":{"name":"ChangePasswordParameter","abstract":"<p>Change password command parameters</p>","parent_name":"ChangeReferenceData"},"Structs/HealthCardCommand/ChangeReferenceData.html#/s:17OpenHealthCardKit0bC7CommandV19ChangeReferenceDataV6change8passwordAcA8PasswordVAG_Sb10dfSpecificAA10Format2PinV3oldAL3newt_tKFZ":{"name":"change(password:)","abstract":"<p>Use case Change Password Secret (Pin) gemSpec_COS#14.6.1.1</p>","parent_name":"ChangeReferenceData"},"Structs/HealthCardCommand/ChangeReferenceData.html#/s:17OpenHealthCardKit0bC7CommandV19ChangeReferenceDataV20SetPasswordParametera":{"name":"SetPasswordParameter","abstract":"<p>Set password command parameters</p>","parent_name":"ChangeReferenceData"},"Structs/HealthCardCommand/ChangeReferenceData.html#/s:17OpenHealthCardKit0bC7CommandV19ChangeReferenceDataV3set8passwordAcA8PasswordVAG_Sb10dfSpecificAA10Format2PinV3pint_tFZ":{"name":"set(password:)","abstract":"<p>Use case Set Password Secret (Pin) gemSpec_COS#14.6.1.2</p>","parent_name":"ChangeReferenceData"},"Structs/HealthCardCommand/PsoCertificate.html#/s:17OpenHealthCardKit0bC7CommandV14PsoCertificateV6verify3cvcAcA05GemCvG0V_tKFZ":{"name":"verify(cvc:)","abstract":"<p>Use Case 14.8.7.2: Import of ELC-key by certificate</p>","parent_name":"PsoCertificate"},"Structs/HealthCardCommand/PsoEncipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoEncipherV40encipherUsingTransmittedRsaKeyPkcs1_v1_509rsaPublicL04dataACSo03SecL3Refa_10Foundation4DataVtKFZ":{"name":"encipherUsingTransmittedRsaKeyPkcs1_v1_5(rsaPublicKey:data:)","abstract":"<p>Use case Encipher using transmitted RSA key Pkcs1_v1_5 gemSpec_COS#14.8.4.1_1</p>","parent_name":"PsoEncipher"},"Structs/HealthCardCommand/PsoEncipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoEncipherV34encipherUsingTransmittedRsaKeyOaep09rsaPublicL04dataACSo03SecL3Refa_10Foundation4DataVtKFZ":{"name":"encipherUsingTransmittedRsaKeyOaep(rsaPublicKey:data:)","abstract":"<p>Use case Encipher using transmitted RSA key Oaep gemSpec_COS#14.8.4.1_2</p>","parent_name":"PsoEncipher"},"Structs/HealthCardCommand/PsoEncipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoEncipherV30encipherUsingTransmittedElcKey09elcPublicL04dataACSo03SecL3Refa_10Foundation4DataVtKFZ":{"name":"encipherUsingTransmittedElcKey(elcPublicKey:data:)","abstract":"<p>Use case Encipher using transmitted ELC key gemSpec_COS#14.8.4.2</p>","parent_name":"PsoEncipher"},"Structs/HealthCardCommand/PsoEncipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoEncipherV021encipherUsingRsaKeyOnC04dataAC10Foundation4DataV_tKFZ":{"name":"encipherUsingRsaKeyOnCard(data:)","abstract":"<p>Use cases Encipher using a RSA key saved on card gemSpec_COS#14.8.4.3</p>","parent_name":"PsoEncipher"},"Structs/HealthCardCommand/PsoEncipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoEncipherV021encipherUsingElcKeyOnC04dataAC10Foundation4DataV_tKFZ":{"name":"encipherUsingElcKeyOnCard(data:)","abstract":"<p>Use cases Encipher using a Elc key saved on card gemSpec_COS#14.8.4.4</p>","parent_name":"PsoEncipher"},"Structs/HealthCardCommand/PsoEncipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoEncipherV027encipherUsingSymmetricKeyOnC04dataAC10Foundation4DataV_tKFZ":{"name":"encipherUsingSymmetricKeyOnCard(data:)","abstract":"<p>Use cases Encipher using a symmetric key saved on card gemSpec_COS#14.8.4.5</p>","parent_name":"PsoEncipher"},"Structs/HealthCardCommand/PsoDecipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoDecipherV16decipherUsingRsa10cryptogramAC10Foundation4DataV_tKFZ":{"name":"decipherUsingRsa(cryptogram:)","abstract":"<p>Use case Decipher using RSA gemSpec_COS#14.8.3.1</p>","parent_name":"PsoDecipher"},"Structs/HealthCardCommand/PsoDecipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoDecipherV16decipherUsingElc10cryptogramAC10Foundation4DataV_tKFZ":{"name":"decipherUsingElc(cryptogram:)","abstract":"<p>Use case Decipher using ELC gemSpec_COS#14.8.3.2</p>","parent_name":"PsoDecipher"},"Structs/HealthCardCommand/PsoDecipher.html#/s:17OpenHealthCardKit0bC7CommandV11PsoDecipherV25decipherUsingSymmetricKey10cryptogramAC10Foundation4DataV_tKFZ":{"name":"decipherUsingSymmetricKey(cryptogram:)","abstract":"<p>Use case Decipher using a symmetric key gemSpec_COS#14.8.3.3</p>","parent_name":"PsoDecipher"},"Structs/HealthCardCommand/PsoDSA.html#/s:17OpenHealthCardKit0bC7CommandV6PsoDSAV4signyAC10Foundation4DataVKFZ":{"name":"sign(_:)","abstract":"<p>Use case compute a digital signature without <q>message recovery</q></p>","parent_name":"PsoDSA"},"Structs/HealthCardCommand/PsoDSA.html#/s:17OpenHealthCardKit0bC7CommandV6PsoDSAV6verify9signature4hash9publicKeyAC10Foundation4DataV_ALSo03SecL3RefatKFZ":{"name":"verify(signature:hash:publicKey:)","abstract":"<p>Use case verify an ELC signature gemSpec_COS#14.8.9.1</p>","parent_name":"PsoDSA"},"Structs/HealthCardCommand/PsoChecksum.html#/s:17OpenHealthCardKit0bC7CommandV11PsoChecksumV12hashUsingAES15incrementSSCmac4dataACSb_10Foundation4DataVtKFZ":{"name":"hashUsingAES(incrementSSCmac:data:)","abstract":"<p>Use case Compute Cryptographic Checksum gemSpec_COS#14.8.1</p>","parent_name":"PsoChecksum"},"Structs/HealthCardCommand/PsoChecksum.html#/s:17OpenHealthCardKit0bC7CommandV11PsoChecksumV12hashUsingDES4dataAC10Foundation4DataV_tKFZ":{"name":"hashUsingDES(data:)","abstract":"<p>Use case Compute Cryptographic Checksum gemSpec_COS#14.8.1</p>","parent_name":"PsoChecksum"},"Structs/HealthCardCommand/PsoChecksum.html#/s:17OpenHealthCardKit0bC7CommandV11PsoChecksumV6verify4data3macAC10Foundation4DataV_AKtKFZ":{"name":"verify(data:mac:)","abstract":"<p>Use case Verify Cryptographic Checksum gemSpec_COS#14.8.8</p>","parent_name":"PsoChecksum"},"Structs/HealthCardCommand/Terminate.html#/s:17OpenHealthCardKit0bC7CommandV9TerminateV20terminateCurrentFileACyFZ":{"name":"terminateCurrentFile()","abstract":"<p>Use case Terminate current EF gemSpec_Cos#14.2.9.1</p>","parent_name":"Terminate"},"Structs/HealthCardCommand/Terminate.html#/s:17OpenHealthCardKit0bC7CommandV9TerminateV9terminate21privateOrSymmetricKey10dfSpecificAcA0K0V_SbtFZ":{"name":"terminate(privateOrSymmetricKey:dfSpecific:)","abstract":"<p>Use case Terminate private or symmetric key object gemSpec_Cos#14.2.9.2</p>","parent_name":"Terminate"},"Structs/HealthCardCommand/Terminate.html#/s:17OpenHealthCardKit0bC7CommandV9TerminateV18terminatePublicKey9referenceAC10Foundation4DataV_tKFZ":{"name":"terminatePublicKey(reference:)","abstract":"<p>Use case Terminate public key object gemSpec_Cos#14.2.9.3</p>","parent_name":"Terminate"},"Structs/HealthCardCommand/Terminate.html#/s:17OpenHealthCardKit0bC7CommandV9TerminateV9terminate8password10dfSpecificAcA8PasswordV_SbtFZ":{"name":"terminate(password:dfSpecific:)","abstract":"<p>Use case Terminate password object gemSpec_Cos#14.2.9.4</p>","parent_name":"Terminate"},"Structs/HealthCardCommand/TerminateDf.html#/s:17OpenHealthCardKit0bC7CommandV11TerminateDfV09terminateG0ACyFZ":{"name":"terminateDf()","abstract":"<p>Use case Terminate DF current Folder gemSpec_Cos#14.2.8.1</p>","parent_name":"TerminateDf"},"Structs/HealthCardCommand/TerminateCardUsage.html#/s:17OpenHealthCardKit0bC7CommandV09TerminateC5UsageV09terminatecG0ACyFZ":{"name":"terminateCardUsage()","abstract":"<p>Use case Terminate Card Usage gemSpec_Cos#14.2.7.1</p>","parent_name":"TerminateCardUsage"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV10selectRootACyFZ":{"name":"selectRoot()","abstract":"<p>Use case Select root of object system gemSpec_Cos#14.2.6.1</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV23selectRootRequestingFcp14expectedLengthACSi_tKFZ":{"name":"selectRootRequestingFcp(expectedLength:)","abstract":"<p>Use cases Select root of object system requesting FCP gemSpec_Cos#4.2.6.2</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV10selectFile4with4nextAcA21ApplicationIdentifierV_SbtFZ":{"name":"selectFile(with:next:)","abstract":"<p>Use cases Select file with Application Identifier gemSpec_Cos#14.2.6.5 + 14.2.6.7</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV23selectFileRequestingFcp4with14expectedLength4nextAcA21ApplicationIdentifierV_SiSbtKFZ":{"name":"selectFileRequestingFcp(with:expectedLength:next:)","abstract":"<p>Use cases Select file with Application Identifier requesting FCP gemSpec_Cos#14.2.6.6 + 14.2.6.8</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV8selectDf4withAcA14FileIdentifierV_tFZ":{"name":"selectDf(with:)","abstract":"<p>Use case Select DF with File Identifier gemSpec_Cos#14.2.6.9</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV21selectDfRequestingFcp4with14expectedLengthAcA14FileIdentifierV_SitKFZ":{"name":"selectDfRequestingFcp(with:expectedLength:)","abstract":"<p>Use case Select DF with File Identifier gemSpec_Cos#14.2.6.10</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV12selectParentACyFZ":{"name":"selectParent()","abstract":"<p>Use case Select parent folder gemSpec_Cos#14.2.6.11</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV25selectParentRequestingFcp14expectedLengthACSi_tKFZ":{"name":"selectParentRequestingFcp(expectedLength:)","abstract":"<p>Use case Select parent folder requesting FCP gemSpec_Cos#14.2.6.12</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV8selectEf4withAcA14FileIdentifierV_tFZ":{"name":"selectEf(with:)","abstract":"<p>Use cases Select EF with File Identifier gemSpec_Cos#14.2.6.13</p>","parent_name":"Select"},"Structs/HealthCardCommand/Select.html#/s:17OpenHealthCardKit0bC7CommandV6SelectV21selectEfRequestingFcp4with14expectedLengthAcA14FileIdentifierV_SitKFZ":{"name":"selectEfRequestingFcp(with:expectedLength:)","abstract":"<p>Use case Select EF with File Identifier requesting FCP gemSpec_Cos#14.2.6.14</p>","parent_name":"Select"},"Structs/HealthCardCommand/LoadApplication.html#/s:17OpenHealthCardKit0bC7CommandV15LoadApplicationV04loadG011useChaining4dataACSb_10Foundation4DataVtFZ":{"name":"loadApplication(useChaining:data:)","abstract":"<p>Use cases Load Application gemSpec_Cos#14.2.5.1 - 14.2.5.2</p>","parent_name":"LoadApplication"},"Structs/HealthCardCommand/Delete.html#/s:17OpenHealthCardKit0bC7CommandV6DeleteV17deleteCurrentFileACyFZ":{"name":"deleteCurrentFile()","abstract":"<p>Use case Delete current EF gemSpec_Cos#14.2.4.1</p>","parent_name":"Delete"},"Structs/HealthCardCommand/Delete.html#/s:17OpenHealthCardKit0bC7CommandV6DeleteV6delete21privateOrSymmetricKey10dfSpecificAcA0K0V_SbtFZ":{"name":"delete(privateOrSymmetricKey:dfSpecific:)","abstract":"<p>Use case Delete private or symmetric key object gemSpec_Cos#14.2.4.2</p>","parent_name":"Delete"},"Structs/HealthCardCommand/Delete.html#/s:17OpenHealthCardKit0bC7CommandV6DeleteV15deletePublicKey9referenceAC10Foundation4DataV_tKFZ":{"name":"deletePublicKey(reference:)","abstract":"<p>Use case Delete public key object gemSpec_Cos#14.2.4.3</p>","parent_name":"Delete"},"Structs/HealthCardCommand/Delete.html#/s:17OpenHealthCardKit0bC7CommandV6DeleteV6delete8password10dfSpecificAcA8PasswordV_SbtFZ":{"name":"delete(password:dfSpecific:)","abstract":"<p>Use case Delete password object gemSpec_Cos#14.2.4.4</p>","parent_name":"Delete"},"Structs/HealthCardCommand/Deactivate.html#/s:17OpenHealthCardKit0bC7CommandV10DeactivateV21deactivateCurrentFileACyFZ":{"name":"deactivateCurrentFile()","abstract":"<p>Use case Deactivate current EF gemSpec_Cos#14.2.3.1</p>","parent_name":"Deactivate"},"Structs/HealthCardCommand/Deactivate.html#/s:17OpenHealthCardKit0bC7CommandV10DeactivateV10deactivate21privateOrSymmetricKey10dfSpecificAcA0K0V_SbtFZ":{"name":"deactivate(privateOrSymmetricKey:dfSpecific:)","abstract":"<p>Use case Deactivate private or symmetric key object gemSpec_Cos#14.2.3.2</p>","parent_name":"Deactivate"},"Structs/HealthCardCommand/Deactivate.html#/s:17OpenHealthCardKit0bC7CommandV10DeactivateV19deactivatePublicKey9referenceAC10Foundation4DataV_tKFZ":{"name":"deactivatePublicKey(reference:)","abstract":"<p>Use case Deactivate public key object gemSpec_Cos#14.2.3.3</p>","parent_name":"Deactivate"},"Structs/HealthCardCommand/Deactivate.html#/s:17OpenHealthCardKit0bC7CommandV10DeactivateV10deactivate8password10dfSpecificAcA8PasswordV_SbtFZ":{"name":"deactivate(password:dfSpecific:)","abstract":"<p>Use case Deactivate password object gemSpec_Cos#14.2.3.4</p>","parent_name":"Deactivate"},"Structs/HealthCardCommand/Activate.html#/s:17OpenHealthCardKit0bC7CommandV8ActivateV19activateCurrentFileACyFZ":{"name":"activateCurrentFile()","abstract":"<p>Use case Activate current EF gemSpec_Cos#14.2.1.1</p>","parent_name":"Activate"},"Structs/HealthCardCommand/Activate.html#/s:17OpenHealthCardKit0bC7CommandV8ActivateV8activate21privateOrSymmetricKey10dfSpecificAcA0K0V_SbtFZ":{"name":"activate(privateOrSymmetricKey:dfSpecific:)","abstract":"<p>Use case Activate private or symmetric key object gemSpec_Cos#14.2.1.2</p>","parent_name":"Activate"},"Structs/HealthCardCommand/Activate.html#/s:17OpenHealthCardKit0bC7CommandV8ActivateV17activatePublicKey9referenceAC10Foundation4DataV_tKFZ":{"name":"activatePublicKey(reference:)","abstract":"<p>Use case Activate public key object gemSpec_Cos#14.2.1.3</p>","parent_name":"Activate"},"Structs/HealthCardCommand/Activate.html#/s:17OpenHealthCardKit0bC7CommandV8ActivateV8activate8password10dfSpecificAcA8PasswordV_SbtFZ":{"name":"activate(password:dfSpecific:)","abstract":"<p>Use case Activate password object gemSpec_Cos#14.2.1.4</p>","parent_name":"Activate"},"Structs/HealthCardCommand/Misc/ChallengeParameter.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV18ChallengeParameterO3aesyA2GmF":{"name":"aes","abstract":"<p>AES</p>","parent_name":"ChallengeParameter"},"Structs/HealthCardCommand/Misc/ChallengeParameter.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV18ChallengeParameterO3desyA2GmF":{"name":"des","abstract":"<p>DES</p>","parent_name":"ChallengeParameter"},"Structs/HealthCardCommand/Misc/ChallengeParameter.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV18ChallengeParameterO3elcyA2GmF":{"name":"elc","abstract":"<p>ELC</p>","parent_name":"ChallengeParameter"},"Structs/HealthCardCommand/Misc/ChallengeParameter.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV18ChallengeParameterO3rsayA2GmF":{"name":"rsa","abstract":"<p>RSA</p>","parent_name":"ChallengeParameter"},"Structs/HealthCardCommand/Misc/GenerationMode.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV14GenerationModeO8readOnlyyAgA3KeyVSg_SbtcAGmF":{"name":"readOnly(reference:dfSpecific:)","abstract":"<p>No generation, just read the current (public) key</p>","parent_name":"GenerationMode"},"Structs/HealthCardCommand/Misc/GenerationMode.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV14GenerationModeO8generateyAgA3KeyVSg_S3btcAGmF":{"name":"generate(reference:dfSpecific:overwrite:out:)","abstract":"<p>Generate a new Key Pair for a given Key reference</p>","parent_name":"GenerationMode"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV11fingerprint3forAC10Foundation4DataV_tKFZ":{"name":"fingerprint(for:)","abstract":"<p>Use case verify COS Fingerprint gemSpec_COS#14.9.2.1</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc/GenerationMode.html":{"name":"GenerationMode","abstract":"<p>Asymmetric Key Pair Generation (GAKP) modes</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV25generateAsymmetricKeyPair4modeAcE14GenerationModeO_tFZ":{"name":"generateAsymmetricKeyPair(mode:)","abstract":"<p>Generate an Asymmetric Key Pair - gemSpec_COS#14.9.3</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc/ChallengeParameter.html":{"name":"ChallengeParameter","abstract":"<p>ChallengeParameter to specify challenge mode in gemSpec_COS#14.9.4</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV9challenge4modeAcE18ChallengeParameterO_tFZ":{"name":"challenge(mode:)","abstract":"<p>Get Challenge - gemSpec_COS#14.9.4</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV6random6lengthACSi_tKFZ":{"name":"random(length:)","abstract":"<p>Get random bytes with given length - gemSpec_COS#14.9.5</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV14listPublicKeysACyFZ":{"name":"listPublicKeys()","abstract":"<p>List all Public Keys - gemSpec_COS#14.9.7</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV16openLogicChannelACyFZ":{"name":"openLogicChannel()","abstract":"<p>Open logic channel - gemSpec_COS#14.9.8.1</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV17closeLogicChannel6numberACs5UInt8V_tFZ":{"name":"closeLogicChannel(number:)","abstract":"<p>Close logic channel - gemSpec_COS#14.9.8.2</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV17resetLogicChannel6numberACs5UInt8V_tFZ":{"name":"resetLogicChannel(number:)","abstract":"<p>Reset logic channel - gemSpec_COS#14.9.8.3</p>","parent_name":"Misc"},"Structs/HealthCardCommand/Misc.html#/s:17OpenHealthCardKit0bC7CommandV4MiscV16resetApplicationACyFZ":{"name":"resetApplication()","abstract":"<p>Reset Application (channel context) - gemSpec_COS#14.9.8.4</p>","parent_name":"Misc"},"Structs/HealthCardCommand/ManageSE/DomainId.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV8DomainIdO15brainpoolP256r1yA2GmF":{"name":"brainpoolP256r1","abstract":"<p>Undocumented</p>","parent_name":"DomainId"},"Structs/HealthCardCommand/ManageSE/DomainId.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV8DomainIdO15brainpoolP384r1yA2GmF":{"name":"brainpoolP384r1","abstract":"<p>Undocumented</p>","parent_name":"DomainId"},"Structs/HealthCardCommand/ManageSE/DomainId.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV8DomainIdO15brainpoolP512r1yA2GmF":{"name":"brainpoolP512r1","abstract":"<p>Undocumented</p>","parent_name":"DomainId"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14setEnvironment6numberACSi_tKFZ":{"name":"setEnvironment(number:)","abstract":"<p>Change/Set the Security Environment - gemSpec_COS#14.9.9.1</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14selectInternal12symmetricKey10dfSpecific9algorithmAcA0K0V_SbAA12PSOAlgorithmOtKFZ":{"name":"selectInternal(symmetricKey:dfSpecific:algorithm:)","abstract":"<p>Select internal key for symmetric authentication - gemSpec_COS#14.9.9.2</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14selectInternal13asymmetricKey10dfSpecific9algorithmAcA0K0V_SbAA12PSOAlgorithmOtKFZ":{"name":"selectInternal(asymmetricKey:dfSpecific:algorithm:)","abstract":"<p>Select internal key for asymmetric authentication - gemSpec_COS#14.9.9.3</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14selectExternal12symmetricKey10dfSpecific9algorithmAcA0K0V_SbAA12PSOAlgorithmOtKFZ":{"name":"selectExternal(symmetricKey:dfSpecific:algorithm:)","abstract":"<p>Select external key for symmetric authentication - gemSpec_COS#14.9.9.4</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14selectExternal12referenceKey9algorithmAC10Foundation4DataV_AA12PSOAlgorithmOtKFZ":{"name":"selectExternal(referenceKey:algorithm:)","abstract":"<p>Select external key for asymmetric authentication - gemSpec_COS#14.9.9.5</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV12selectMutual12symmetricKey10dfSpecific9algorithmAcA0K0V_SbAA12PSOAlgorithmOtKFZ":{"name":"selectMutual(symmetricKey:dfSpecific:algorithm:)","abstract":"<p>Select symmetric key for mutual authentication - gemSpec_COS#14.9.9.6</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV10selectPACE12symmetricKey10dfSpecific3oidAcA0K0V_Sb04ASN1D016ObjectIdentifierVtKFZ":{"name":"selectPACE(symmetricKey:dfSpecific:oid:)","abstract":"<p>Select symmetric key for PACE authentication without specifying the curve - gemSpec_COS#14.9.9.7</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE/DomainId.html":{"name":"DomainId","abstract":"<p>Domain Id parameter = gemSpec_COS#14.9.9.8 N102.454</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV10selectPACE12symmetricKey10dfSpecific3oid6domainAcA0K0V_Sb04ASN1D016ObjectIdentifierVAE8DomainIdOtKFZ":{"name":"selectPACE(symmetricKey:dfSpecific:oid:domain:)","abstract":"<p>Select symmetric key for PACE authentication with domain - gemSpec_COS#14.9.9.8</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV13selectSigning3key10dfSpecific9algorithmAcA3KeyV_SbAA12PSOAlgorithmOtKFZ":{"name":"selectSigning(key:dfSpecific:algorithm:)","abstract":"<p>Select signing key for signing - gemSpec_COS#14.9.9.9</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV9selectCVC12referenceKeyAC10Foundation4DataV_tKFZ":{"name":"selectCVC(referenceKey:)","abstract":"<p>Select CVC key - gemSpec_COS#14.9.9.10</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14selectDecipher3key10dfSpecific9algorithmAcA3KeyV_SbAA12PSOAlgorithmOtKFZ":{"name":"selectDecipher(key:dfSpecific:algorithm:)","abstract":"<p>Select decipher key for decrypting - gemSpec_COS#14.9.9.11</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/ManageSE.html#/s:17OpenHealthCardKit0bC7CommandV8ManageSEV14selectEncipher3key9algorithmAC10Foundation4DataV_AA12PSOAlgorithmOtKFZ":{"name":"selectEncipher(key:algorithm:)","abstract":"<p>Select encipher key for encrypting - gemSpec_COS#14.9.9.12</p>","parent_name":"ManageSE"},"Structs/HealthCardCommand/SecurityStatus.html#/s:17OpenHealthCardKit0bC7CommandV14SecurityStatusV04readG3For12symmetricKey10dfSpecificAcA0K0V_SbtKFZ":{"name":"readStatusFor(symmetricKey:dfSpecific:)","abstract":"<p>Read the security status for a given symmetric key - gemSpec_COS#14.7.3.1</p>","parent_name":"SecurityStatus"},"Structs/HealthCardCommand/SecurityStatus.html#/s:17OpenHealthCardKit0bC7CommandV14SecurityStatusV04readG3For6rsaCvcAC10Foundation4DataV_tKFZ":{"name":"readStatusFor(rsaCvc:)","abstract":"<p>Read the security status for a given CHA - gemSpec_COS#14.7.3.2</p>","parent_name":"SecurityStatus"},"Structs/HealthCardCommand/SecurityStatus.html#/s:17OpenHealthCardKit0bC7CommandV14SecurityStatusV04readG3For7bitList3oidAC10Foundation4DataV_04ASN1D016ObjectIdentifierVtKFZ":{"name":"readStatusFor(bitList:oid:)","abstract":"<p>Read the security status for the given list of bits - gemSpec_COS#14.7.3.3</p>","parent_name":"SecurityStatus"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step1aACyFZ":{"name":"step1a()","abstract":"<p>Start PACE General authenticate - step 1a #14.7.2.1.1</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step2a9publicKeyAC10Foundation4DataV_tKFZ":{"name":"step2a(publicKey:)","abstract":"<p>Send publicKey data (from response step 1b) command - step 2a #14.7.2.1.2</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step3a9publicKeyAC10Foundation4DataV_tKFZ":{"name":"step3a(publicKey:)","abstract":"<p>Key agreement - step 3a #14.7.2.1.3</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step4a5tokenAC10Foundation4DataV_tKFZ":{"name":"step4a(token:)","abstract":"<p>Verify/Exchange token - step4a #14.7.2.1.4</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step1bACyFZ":{"name":"step1b()","abstract":"<p>Start PACE General authenticate - step 1b #14.7.2.4.1</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step2b1z3canAC10Foundation4DataV_AA3CANVtKFZ":{"name":"step2b(z:can:)","abstract":"<p>Set the nonce for PACE General authenticate with CAN - step 2b #14.7.2.4.2</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step3b9publicKeyAC10Foundation4DataV_tKFZ":{"name":"step3b(publicKey:)","abstract":"<p>Key agreement - step 3b #14.7.2.4.3</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step4b9publicKeyAC10Foundation4DataV_tKFZ":{"name":"step4b(publicKey:)","abstract":"<p>Derive Sessions key - step4b #14.7.2.4.4</p>","parent_name":"PACE"},"Structs/HealthCardCommand/PACE.html#/s:17OpenHealthCardKit0bC7CommandV4PACEV6step5b5tokenAC10Foundation4DataV_tKFZ":{"name":"step5b(token:)","abstract":"<p>Verify/Exchange token - step5b #14.7.2.4.5</p>","parent_name":"PACE"},"Structs/HealthCardCommand/ELC.html#/s:17OpenHealthCardKit0bC7CommandV3ELCV6step1a6keyRefAC10Foundation4DataV_tKFZ":{"name":"step1a(keyRef:)","abstract":"<p>Mutual authentication with ELC - step 1 #14.7.2.2.1</p>","parent_name":"ELC"},"Structs/HealthCardCommand/ELC.html#/s:17OpenHealthCardKit0bC7CommandV3ELCV6step2a11ephemeralPKAC10Foundation4DataV_tKFZ":{"name":"step2a(ephemeralPK:)","abstract":"<p>Exchange session key - step 2 #14.7.2.2.2</p>","parent_name":"ELC"},"Structs/HealthCardCommand/ELC.html#/s:17OpenHealthCardKit0bC7CommandV3ELCV6step1bACyFZ":{"name":"step1b()","abstract":"<p>Start ELC mutual authentication - step 1b #14.7.2.3.1</p>","parent_name":"ELC"},"Structs/HealthCardCommand/ELC.html#/s:17OpenHealthCardKit0bC7CommandV3ELCV6step2b3cmdAC10Foundation4DataV_tKFZ":{"name":"step2b(cmd:)","abstract":"<p>Finish ELC authentication - step 2b #14.7.2.3.2</p>","parent_name":"ELC"},"Structs/HealthCardCommand/Authentication.html#/s:17OpenHealthCardKit0bC7CommandV14AuthenticationV014externalMutualF0_14expectResponseAC10Foundation4DataV_SbtKFZ":{"name":"externalMutualAuthentication(_:expectResponse:)","parent_name":"Authentication"},"Structs/HealthCardCommand/Authentication.html#/s:17OpenHealthCardKit0bC7CommandV14AuthenticationV20internalAuthenticateyAC10Foundation4DataVKFZ":{"name":"internalAuthenticate(_:)","abstract":"<p>Use-case 14.7.4 Internal Authentication command - gemSpec_COS#14.7.4</p>","parent_name":"Authentication"},"Structs/HealthCardCommand/Write.html#/s:17OpenHealthCardKit0bC7CommandV5WriteV05writeE04dataAC10Foundation4DataV_tKFZ":{"name":"writeCommand(data:)","abstract":"<p>Use cases Write Binary without <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Write"},"Structs/HealthCardCommand/Write.html#/s:17OpenHealthCardKit0bC7CommandV5WriteV05writeE04with4dataAcA19ShortFileIdentifierV_10Foundation4DataVtKFZ":{"name":"writeCommand(with:data:)","abstract":"<p>Use cases Write Binary with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Write"},"Structs/HealthCardCommand/Update.html#/s:17OpenHealthCardKit0bC7CommandV6UpdateV06updateE04data6offsetAC10Foundation4DataV_SitKFZ":{"name":"updateCommand(data:offset:)","abstract":"<p>Use cases Update Binary without <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Update"},"Structs/HealthCardCommand/Update.html#/s:17OpenHealthCardKit0bC7CommandV6UpdateV06updateE04with4data6offsetAcA19ShortFileIdentifierV_10Foundation4DataVSitKFZ":{"name":"updateCommand(with:data:offset:)","abstract":"<p>Use cases Update Binary with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Update"},"Structs/HealthCardCommand/SetLogicalEof.html#/s:17OpenHealthCardKit0bC7CommandV13SetLogicalEofV03setghE06offsetACSi_tKFZ":{"name":"setLogicalEofCommand(offset:)","abstract":"<p>Use cases Set Logical EOF without <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"SetLogicalEof"},"Structs/HealthCardCommand/SetLogicalEof.html#/s:17OpenHealthCardKit0bC7CommandV13SetLogicalEofV03setghE04with6offsetAcA19ShortFileIdentifierV_SitKFZ":{"name":"setLogicalEofCommand(with:offset:)","abstract":"<p>Use cases Set Logical EOF with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"SetLogicalEof"},"Structs/HealthCardCommand/Read.html#/s:17OpenHealthCardKit0bC7CommandV4ReadV08readFileE02ne6offsetACSi_SitKFZ":{"name":"readFileCommand(ne:offset:)","abstract":"<p>Use cases Read Binary without <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Read"},"Structs/HealthCardCommand/Read.html#/s:17OpenHealthCardKit0bC7CommandV4ReadV08readFileE04with2ne6offsetAcA05ShortH10IdentifierV_S2itKFZ":{"name":"readFileCommand(with:ne:offset:)","abstract":"<p>Use cases Read Binary with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Read"},"Structs/HealthCardCommand/Erase.html#/s:17OpenHealthCardKit0bC7CommandV5EraseV09eraseFileE06offsetACSi_tKFZ":{"name":"eraseFileCommand(offset:)","abstract":"<p>Use cases Erase Binary without <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Erase"},"Structs/HealthCardCommand/Erase.html#/s:17OpenHealthCardKit0bC7CommandV5EraseV09eraseFileE04with6offsetAcA05ShortH10IdentifierV_SitKFZ":{"name":"eraseFileCommand(with:offset:)","abstract":"<p>Use cases Erase Binary with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"Erase"},"Structs/HealthCardCommand/UpdateRecord.html#/s:17OpenHealthCardKit0bC7CommandV12UpdateRecordV06updateG019shortFileIdentifier12recordNumber7newDataAcA05ShortjK0VSg_s5UInt8V10Foundation0O0VtKFZ":{"name":"updateRecord(shortFileIdentifier:recordNumber:newData:)","abstract":"<p>Use cases Update Record with and without shortFileIdentifier gemSpec_COS#14.4.8.1 - 14.4.8.2</p>","parent_name":"UpdateRecord"},"Structs/HealthCardCommand/SearchRecord.html#/s:17OpenHealthCardKit0bC7CommandV12SearchRecordV06searchG019shortFileIdentifier12recordNumber0H6String14expectedLengthAcA05ShortjK0VSg_s5UInt8V10Foundation4DataVSitKFZ":{"name":"searchRecord(shortFileIdentifier:recordNumber:searchString:expectedLength:)","abstract":"<p>Use cases Search Record with and without shortFileIdentifier gemSpec_COS#14.4.7.1 - 14.4.7.2</p>","parent_name":"SearchRecord"},"Structs/HealthCardCommand/ReadRecord.html#/s:17OpenHealthCardKit0bC7CommandV10ReadRecordV04readG019shortFileIdentifier12recordNumber14expectedLengthAcA05ShortjK0VSg_s5UInt8VSitKFZ":{"name":"readRecord(shortFileIdentifier:recordNumber:expectedLength:)","abstract":"<p>Use cases Read Record with and without shortFileIdentifier gemSpec_COS#14.4.6.1 - 14.4.6.2</p>","parent_name":"ReadRecord"},"Structs/HealthCardCommand/EraseRecord.html#/s:17OpenHealthCardKit0bC7CommandV11EraseRecordV05eraseG019shortFileIdentifier12recordNumberAcA05ShortjK0VSg_s5UInt8VtKFZ":{"name":"eraseRecord(shortFileIdentifier:recordNumber:)","abstract":"<p>Use cases Erase Record with and without shortFileIdentifier gemSpec_COS#14.4.5.1 - 14.4.5.2</p>","parent_name":"EraseRecord"},"Structs/HealthCardCommand/DeleteRecord.html#/s:17OpenHealthCardKit0bC7CommandV12DeleteRecordV06deleteG019shortFileIdentifier12recordNumberAcA05ShortjK0VSg_s5UInt8VtKFZ":{"name":"deleteRecord(shortFileIdentifier:recordNumber:)","abstract":"<p>Use cases Delete Record command with and without shortFileIdentifier gemSpec_COS#14.4.4.1 - 14.4.4.2</p>","parent_name":"DeleteRecord"},"Structs/HealthCardCommand/DeactivateRecord.html#/s:17OpenHealthCardKit0bC7CommandV16DeactivateRecordV010deactivateG019shortFileIdentifier12recordNumber22useAllFollowingRecordsAcA05ShortjK0VSg_s5UInt8VSbtKFZ":{"name":"deactivateRecord(shortFileIdentifier:recordNumber:useAllFollowingRecords:)","abstract":"<p>Use cases Deactivate Record with and without shortFileIdentifier gemSpec_COS#14.4.3.1 - 14.4.3.4</p>","parent_name":"DeactivateRecord"},"Structs/HealthCardCommand/AppendRecord.html#/s:17OpenHealthCardKit0bC7CommandV12AppendRecordV06appendG019shortFileIdentifier10recordDataAcA05ShortjK0VSg_10Foundation0M0VtKFZ":{"name":"appendRecord(shortFileIdentifier:recordData:)","abstract":"<p>Use cases Append Record with and without shortFileIdentifier gemSpec_COS#14.4.2.1 - 14.4.2.2</p>","parent_name":"AppendRecord"},"Structs/HealthCardCommand/ActivateRecord.html#/s:17OpenHealthCardKit0bC7CommandV14ActivateRecordV08activateG019shortFileIdentifier12recordNumber22useAllFollowingRecordsAcA05ShortjK0VSg_s5UInt8VSbtKFZ":{"name":"activateRecord(shortFileIdentifier:recordNumber:useAllFollowingRecords:)","abstract":"<p>Use cases Activate Record with and without shortFileIdentifier gemSpec_COS#14.4.1.1 - 14.4.1.4</p>","parent_name":"ActivateRecord"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV04apduE0AA0E4Type_pvp":{"name":"apduCommand","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CommandType.html\">CommandType</a></code> holding the command data</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV16responseStatusesSDys6UInt16VAA14ResponseStatusOGvp":{"name":"responseStatuses","abstract":"<p>Dictionary mapping from <em>UInt16</em> status codes (e.g. 0x9000) to its command context specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ResponseStatus.html\">ResponseStatus</a></code>es.</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/ActivateRecord.html":{"name":"ActivateRecord","abstract":"<p>Commands representing Activate Record command in gemSpec_COS#14.4.1</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/AppendRecord.html":{"name":"AppendRecord","abstract":"<p>Commands representing Append Record command in gemSpec_COS#14.4.2</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/DeactivateRecord.html":{"name":"DeactivateRecord","abstract":"<p>Commands representing Deactivate Record command in gemSpec_COS#14.4.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/DeleteRecord.html":{"name":"DeleteRecord","abstract":"<p>Commands representing Delete Record command in gemSpec_COS#14.4.4</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/EraseRecord.html":{"name":"EraseRecord","abstract":"<p>Commands representing Erase Record command in gemSpec_COS#14.4.5</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/ReadRecord.html":{"name":"ReadRecord","abstract":"<p>Commands representing Read Record command in gemSpec_COS#14.4.6</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/SearchRecord.html":{"name":"SearchRecord","abstract":"<p>Commands representing Search Record command in gemSpec_COS#14.4.7</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/UpdateRecord.html":{"name":"UpdateRecord","abstract":"<p>Commands representing Update Record command in gemSpec_COS#14.4.8</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV11AlterRecordV":{"name":"AlterRecord","abstract":"<p>Internal helper struct for commands ActivateRecord, DeactivateRecord, &hellip;","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV16ResponseMessagesV":{"name":"ResponseMessages","abstract":"<p>Undocumented</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV10byteModuloSivpZ":{"name":"byteModulo","abstract":"<p>Undocumented</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Erase.html":{"name":"Erase","abstract":"<p>Commands representing the commands in gemSpec_COS#14.3.1</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Read.html":{"name":"Read","abstract":"<p>Commands representing the commands in gemSpec_COS#14.3.2</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/SetLogicalEof.html":{"name":"SetLogicalEof","abstract":"<p>Commands representing the commands in gemSpec_COS#14.3.4</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Update.html":{"name":"Update","abstract":"<p>Commands representing the commands in gemSpec_COS#14.3.5</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Write.html":{"name":"Write","abstract":"<p>Commands representing the commands in gemSpec_COS#14.3.6</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Authentication.html":{"name":"Authentication","abstract":"<p>These builders represent the commands in gemSpec_COS#14.7 <q>Komponentenauthentisierung</q>.</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/ELC.html":{"name":"ELC","abstract":"<p>Use-case ELC #14.7.2.2 and #14.7.2.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/PACE.html":{"name":"PACE","abstract":"<p>Use-case PACE #14.7.2.1 and #14.7.2.4</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/SecurityStatus.html":{"name":"SecurityStatus","abstract":"<p>Use-cases for getting the security status for particular objects/references gemSpec_COS#14.7.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/ManageSE.html":{"name":"ManageSE","abstract":"<p>Use case Manage Security Environment - gemSpec_COS#14.9.9</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Misc.html":{"name":"Misc","abstract":"<p>Builder representing Miscellaneous Commands in gemSpec_COS#14.9</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Activate.html":{"name":"Activate","abstract":"<p>Builders representing Activate Command gemSpec_COS#14.2.1</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Deactivate.html":{"name":"Deactivate","abstract":"<p>Builders representing Deactivate Command gemSpec_COS#14.2.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Delete.html":{"name":"Delete","abstract":"<p>Builders representing Delete Command gemSpec_COS#14.2.4</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/LoadApplication.html":{"name":"LoadApplication","abstract":"<p>Builders representing Load Application Command gemSpec_COS#14.2.5</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Select.html":{"name":"Select","abstract":"<p>Builders representing Select Command gemSpec_COS#14.2.6</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/TerminateCardUsage.html":{"name":"TerminateCardUsage","abstract":"<p>Builders representing Terminate Card Usage Command gemSpec_COS#14.2.7</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/TerminateDf.html":{"name":"TerminateDf","abstract":"<p>Builders representing Terminate DF Command gemSpec_COS#14.2.8</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Terminate.html":{"name":"Terminate","abstract":"<p>Builders representing Terminate Command gemSpec_COS#14.2.9</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV25DeActivateDeleteTerminateV":{"name":"DeActivateDeleteTerminate","abstract":"<p>Internal helper struct for commands Activate, Deactivate, Delete, Terminate","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV22expectedLengthWildcardSivpZ":{"name":"expectedLengthWildcard","abstract":"<p>Expected length wildcard, short or extended</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/PsoChecksum.html":{"name":"PsoChecksum","abstract":"<p>Builder representing Compute Cryptographic Checksum in gemSpec_COS#14.8.1</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/PsoDSA.html":{"name":"PsoDSA","abstract":"<p>Builder representing Compute Digital Signature in gemSpec_COS#14.8.2","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/PsoDecipher.html":{"name":"PsoDecipher","abstract":"<p>Builders representing Decipher command in gemSpec_COS#14.8.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/PsoEncipher.html":{"name":"PsoEncipher","abstract":"<p>Builders representing Encipher command in gemSpec_COS#14.8.4</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/PsoCertificate.html":{"name":"PsoCertificate","abstract":"<p>Builder(s) representing Verify Certificate in gemSpec_COS#14.8.7</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/ChangeReferenceData.html":{"name":"ChangeReferenceData","abstract":"<p>Command representing Change/Set Reference Data Command gemSpec_COS#14.6.1</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/DisableVerificationRequirement.html":{"name":"DisableVerificationRequirement","abstract":"<p>Command representing Disable Verification Requirement Command gemSpec_COS#14.6.2</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/EnableVerificationRequirement.html":{"name":"EnableVerificationRequirement","abstract":"<p>Command representing Enable Verification Requirement Command gemSpec_COS#14.6.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Status.html":{"name":"Status","abstract":"<p>Command representing Get Pin Status Command gemSpec_COS#14.6.4</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand/Verify.html":{"name":"Verify","abstract":"<p>Command representing Verify Secret Command gemSpec_COS#14.6.6</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV39responseMessagesVerificationRequirementSDys6UInt16VAA14ResponseStatusOGvpZ":{"name":"responseMessagesVerificationRequirement","abstract":"<p>Response statuses gemSpec_COS#14.6.2.3</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit0bC7CommandV16responseMessagesSDys6UInt16VAA14ResponseStatusOGvpZ":{"name":"responseMessages","abstract":"<p>Response statuses gemSpec_COS#14.6.1.3, #14.6.6.2</p>","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP4data10Foundation4DataVSgvp":{"name":"data","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP2neSiSgvp":{"name":"ne","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP2ncSivp":{"name":"nc","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP3clas5UInt8Vvp":{"name":"cla","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP3inss5UInt8Vvp":{"name":"ins","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP2p1s5UInt8Vvp":{"name":"p1","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP2p2s5UInt8Vvp":{"name":"p2","parent_name":"HealthCardCommand"},"Structs/HealthCardCommand.html#/s:17OpenHealthCardKit11CommandTypeP5bytes10Foundation4DataVvp":{"name":"bytes","parent_name":"HealthCardCommand"},"Structs/ShortFileIdentifier/Error.html#/s:17OpenHealthCardKit19ShortFileIdentifierV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/ShortFileIdentifier/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV8rawValue10Foundation4DataVvp":{"name":"rawValue","abstract":"<p>The actual value representation for the ShortFileIdentifier</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit0C20ObjectIdentifierTypeP7isValidys6ResultOy10Foundation4DataVs5Error_pGAIFZ":{"name":"isValid(_:)","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV7isValidys6ResultOy10Foundation4DataVs5Error_pGs5UInt8VFZ":{"name":"isValid(_:)","abstract":"<p>Undocumented</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV4asn1AC10Foundation4DataV_tKcfc":{"name":"init(asn1:)","abstract":"<p>Init the Short File Identifier from ASN.1 formatted primitive</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV3hexACSS_tKcfc":{"name":"init(hex:)","abstract":"<p>Undocumented</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierVyACs5UInt8VKcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV34ExtendedGraphemeClusterLiteralTypea":{"name":"ExtendedGraphemeClusterLiteralType","abstract":"<p>Grapheme for SFID is String</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV24UnicodeScalarLiteralTypea":{"name":"UnicodeScalarLiteralType","abstract":"<p>Unicode scalar for SFID is String</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV13stringLiteralACSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Initialize ShortFileIdentifier from String</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV30extendedGraphemeClusterLiteralACSS_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","abstract":"<p>Initialize ShortFileIdentifier from String</p>","parent_name":"ShortFileIdentifier"},"Structs/ShortFileIdentifier.html#/s:17OpenHealthCardKit19ShortFileIdentifierV20unicodeScalarLiteralACSS_tcfc":{"name":"init(unicodeScalarLiteral:)","abstract":"<p>Initialize ShortFileIdentifier from String</p>","parent_name":"ShortFileIdentifier"},"Structs/Password/Error.html#/s:17OpenHealthCardKit8PasswordV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/Password/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordV5pwdIds5UInt8Vvp":{"name":"pwdId","abstract":"<p>Undocumented</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordVyACs5UInt8VKcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit0C16KeyReferenceTypeP09calculateeF010dfSpecifics5UInt8VSb_tF":{"name":"calculateKeyReference(dfSpecific:)","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordV34ExtendedGraphemeClusterLiteralTypea":{"name":"ExtendedGraphemeClusterLiteralType","abstract":"<p>Grapheme for Password is String</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordV24UnicodeScalarLiteralTypea":{"name":"UnicodeScalarLiteralType","abstract":"<p>Unicode scalar for Password is String</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordV13stringLiteralACSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Initialize a Password identifier with a Hex value</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordV30extendedGraphemeClusterLiteralACSS_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","abstract":"<p>Initialize a Password identifier with a Hex value</p>","parent_name":"Password"},"Structs/Password.html#/s:17OpenHealthCardKit8PasswordV20unicodeScalarLiteralACSS_tcfc":{"name":"init(unicodeScalarLiteral:)","abstract":"<p>Initialize a Password identifier with a Hex value</p>","parent_name":"Password"},"Structs/Key/Error.html#/s:17OpenHealthCardKit3KeyV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/Key/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"Key"},"Structs/Key.html#/s:17OpenHealthCardKit3KeyV5keyIds5UInt8Vvp":{"name":"keyId","abstract":"<p>Undocumented</p>","parent_name":"Key"},"Structs/Key.html#/s:17OpenHealthCardKit3KeyVyACs5UInt8VKcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"Key"},"Structs/Key.html#/s:17OpenHealthCardKit0C16KeyReferenceTypeP09calculateeF010dfSpecifics5UInt8VSb_tF":{"name":"calculateKeyReference(dfSpecific:)","parent_name":"Key"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV3oid04ASN1D016ObjectIdentifierVvp":{"name":"oid","abstract":"<p>Object identifier</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV7modulus10Foundation4DataVvp":{"name":"modulus","abstract":"<p>Prime modulus (p)</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV5first10Foundation4DataVvp":{"name":"first","abstract":"<p>First coefficient (a)</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV6second10Foundation4DataVvp":{"name":"second","abstract":"<p>Second coefficient (b)</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV4base10Foundation4DataVvp":{"name":"base","abstract":"<p>Base point (G)</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV5order10Foundation4DataVvp":{"name":"order","abstract":"<p>Order of base point &reg;</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV5point10Foundation4DataVvp":{"name":"point","abstract":"<p>Public point (Y)</p>","parent_name":"ECDSAPubKey"},"Structs/ECDSAPubKey.html#/s:17OpenHealthCardKit11ECDSAPubKeyV8cofactor10Foundation4DataVvp":{"name":"cofactor","abstract":"<p>Cofactor (f)</p>","parent_name":"ECDSAPubKey"},"Structs/RSAPubKey.html#/s:17OpenHealthCardKit9RSAPubKeyV3oid04ASN1D016ObjectIdentifierVvp":{"name":"oid","abstract":"<p>Object identifier</p>","parent_name":"RSAPubKey"},"Structs/RSAPubKey.html#/s:17OpenHealthCardKit9RSAPubKeyV7modulus10Foundation4DataVvp":{"name":"modulus","abstract":"<p>Composite modulus (n)</p>","parent_name":"RSAPubKey"},"Structs/RSAPubKey.html#/s:17OpenHealthCardKit9RSAPubKeyV8exponent10Foundation4DataVvp":{"name":"exponent","abstract":"<p>Public exponent (e)</p>","parent_name":"RSAPubKey"},"Structs/DHPubKey.html#/s:17OpenHealthCardKit8DHPubKeyV3oid04ASN1D016ObjectIdentifierVvp":{"name":"oid","abstract":"<p>Object identifier</p>","parent_name":"DHPubKey"},"Structs/DHPubKey.html#/s:17OpenHealthCardKit8DHPubKeyV5prime10Foundation4DataVvp":{"name":"prime","abstract":"<p>Prime modulus (p)</p>","parent_name":"DHPubKey"},"Structs/DHPubKey.html#/s:17OpenHealthCardKit8DHPubKeyV8subgroup10Foundation4DataVvp":{"name":"subgroup","abstract":"<p>Order of the subgroup (q)</p>","parent_name":"DHPubKey"},"Structs/DHPubKey.html#/s:17OpenHealthCardKit8DHPubKeyV9generator10Foundation4DataVvp":{"name":"generator","abstract":"<p>Generator (g)</p>","parent_name":"DHPubKey"},"Structs/DHPubKey.html#/s:17OpenHealthCardKit8DHPubKeyV5value10Foundation4DataVvp":{"name":"value","abstract":"<p>Public value (y)</p>","parent_name":"DHPubKey"},"Structs/CVCPublicKey/Tag.html#/s:17OpenHealthCardKit12CVCPublicKeyV3TagV3oid04ASN1D00i7DecodedG0OvpZ":{"name":"oid","abstract":"<p>Object identifier</p>","parent_name":"Tag"},"Structs/CVCPublicKey/Tag.html#/s:17OpenHealthCardKit12CVCPublicKeyV3TagV7content04ASN1D00i7DecodedG0OvpZ":{"name":"content","abstract":"<p>Public Key content</p>","parent_name":"Tag"},"Structs/CVCPublicKey.html#/s:17OpenHealthCardKit12CVCPublicKeyV3oid04ASN1D016ObjectIdentifierVvp":{"name":"oid","abstract":"<p>Object Identifier</p>","parent_name":"CVCPublicKey"},"Structs/CVCPublicKey.html#/s:17OpenHealthCardKit12CVCPublicKeyV03pubF010Foundation4DataVvp":{"name":"pubKey","abstract":"<p>Raw public key material. Format could be either:","parent_name":"CVCPublicKey"},"Structs/CVCPublicKey.html#/s:7ASN1Kit0A13DecodableTypeP4fromxAA0A6Object_p_tKcfc":{"name":"init(from:)","parent_name":"CVCPublicKey"},"Structs/CVCPublicKey.html#/s:7ASN1Kit0A13EncodableTypeP10asn1encode3tagAA0A6Object_pAA0A10DecodedTagOSg_tKF":{"name":"asn1encode(tag:)","parent_name":"CVCPublicKey"},"Structs/CVCPublicKey/Tag.html":{"name":"Tag","abstract":"<p>CVCPublicKey tag info</p>","parent_name":"CVCPublicKey"},"Structs/CVCPublicKey.html#/s:17OpenHealthCardKit12CVCPublicKeyV4from4asn1AC04ASN1D00I6Object_p_tKFZ":{"name":"from(asn1:)","abstract":"<p>Create a CVCPublicKey from ASN.1 Object</p>","parent_name":"CVCPublicKey"},"Structs/CVCChat/Tag.html#/s:17OpenHealthCardKit7CVCChatV3TagV3oid04ASN1D00h7DecodedF0OvpZ":{"name":"oid","abstract":"<p>Object identifier</p>","parent_name":"Tag"},"Structs/CVCChat/Tag.html#/s:17OpenHealthCardKit7CVCChatV3TagV7content04ASN1D00h7DecodedF0OvpZ":{"name":"content","abstract":"<p>Discretionary data</p>","parent_name":"Tag"},"Structs/CVCChat.html#/s:17OpenHealthCardKit7CVCChatV12terminalType04ASN1D016ObjectIdentifierVvp":{"name":"terminalType","abstract":"<p>Object Identifier [0x6]</p>","parent_name":"CVCChat"},"Structs/CVCChat.html#/s:17OpenHealthCardKit7CVCChatV21relativeAuthorization10Foundation4DataVvp":{"name":"relativeAuthorization","abstract":"<p>Discretionary Data [0x53]</p>","parent_name":"CVCChat"},"Structs/CVCChat.html#/s:7ASN1Kit0A13DecodableTypeP4fromxAA0A6Object_p_tKcfc":{"name":"init(from:)","parent_name":"CVCChat"},"Structs/CVCChat.html#/s:7ASN1Kit0A13EncodableTypeP10asn1encode3tagAA0A6Object_pAA0A10DecodedTagOSg_tKF":{"name":"asn1encode(tag:)","parent_name":"CVCChat"},"Structs/CVCChat/Tag.html":{"name":"Tag","abstract":"<p>CVC Chat tag info</p>","parent_name":"CVCChat"},"Structs/CVCChat.html#/s:17OpenHealthCardKit7CVCChatV4from4asn1AC04ASN1D00H6Object_p_tKFZ":{"name":"from(asn1:)","abstract":"<p>Create a CVCChat from ASN.1 object</p>","parent_name":"CVCChat"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV3tag04ASN1D00h7DecodedF0OvpZ":{"name":"tag","abstract":"<p>CVC Root body tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV3cpi04ASN1D00h7DecodedF0OvpZ":{"name":"cpi","abstract":"<p>Certificate Profile Identifier tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV3car04ASN1D00h7DecodedF0OvpZ":{"name":"car","abstract":"<p>Certificate Authority Reference tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV6pubKey04ASN1D00i7DecodedF0OvpZ":{"name":"pubKey","abstract":"<p>Public Key tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV3chr04ASN1D00h7DecodedF0OvpZ":{"name":"chr","abstract":"<p>Certificate Holder Reference tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV4chat04ASN1D00h7DecodedF0OvpZ":{"name":"chat","abstract":"<p>Certificate Holder Authorization Template tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV3ced04ASN1D00h7DecodedF0OvpZ":{"name":"ced","abstract":"<p>Certificate Effective Data tag</p>","parent_name":"Tag"},"Structs/CVCBody/Tag.html#/s:17OpenHealthCardKit7CVCBodyV3TagV3cxd04ASN1D00h7DecodedF0OvpZ":{"name":"cxd","abstract":"<p>Certificate Expiration Date tag</p>","parent_name":"Tag"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV28certificateProfileIdentifier10Foundation4DataVvp":{"name":"certificateProfileIdentifier","abstract":"<p>Certificate Profile Identifier [CPI 0x5F29]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV29certificateAuthorityReference10Foundation4DataVvp":{"name":"certificateAuthorityReference","abstract":"<p>Certificate Authority Reference [CAR 0x42]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV9publicKeyAA09CVCPublicG0Vvp":{"name":"publicKey","abstract":"<p>Public key [0x7F49]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV26certificateHolderReference10Foundation4DataVvp":{"name":"certificateHolderReference","abstract":"<p>Card Holder Reference [0x5F20]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV30certificateHolderAuthorizationAA7CVCChatVvp":{"name":"certificateHolderAuthorization","abstract":"<p>Certificate Holder Authorization Template [0x7F4c]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV24certificateEffectiveDate10Foundation4DataVvp":{"name":"certificateEffectiveDate","abstract":"<p>Certificate Effective Date [0x5F25]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV25certificateExpirationDate10Foundation4DataVvp":{"name":"certificateExpirationDate","abstract":"<p>Certificate Expiration Data [0x5F24]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV21certificateExtensionsSay10Foundation4DataVGvp":{"name":"certificateExtensions","abstract":"<p>Certificate Extensions for Terminal Authentication Version 2 [0x65]</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:7ASN1Kit0A13DecodableTypeP4fromxAA0A6Object_p_tKcfc":{"name":"init(from:)","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:7ASN1Kit0A13EncodableTypeP10asn1encode3tagAA0A6Object_pAA0A10DecodedTagOSg_tKF":{"name":"asn1encode(tag:)","parent_name":"CVCBody"},"Structs/CVCBody/Tag.html":{"name":"Tag","abstract":"<p>CVCBody Tag information</p>","parent_name":"CVCBody"},"Structs/CVCBody.html#/s:17OpenHealthCardKit7CVCBodyV4from4asn1AC04ASN1D00H6Object_p_tKFZ":{"name":"from(asn1:)","abstract":"<p>Create CVCBody from ASN.1 Object</p>","parent_name":"CVCBody"},"Structs/GemCvCertificate/Tag.html#/s:17OpenHealthCardKit16GemCvCertificateV3TagV3tag04ASN1D00j7DecodedH0OvpZ":{"name":"tag","abstract":"<p>Root tag</p>","parent_name":"Tag"},"Structs/GemCvCertificate/Tag.html#/s:17OpenHealthCardKit16GemCvCertificateV3TagV9signature04ASN1D00j7DecodedH0OvpZ":{"name":"signature","abstract":"<p>Signature tag</p>","parent_name":"Tag"},"Structs/GemCvCertificate/Error.html#/s:17OpenHealthCardKit16GemCvCertificateV5ErrorO10unexpectedyAE04ASN1D00J10DecodedTagO_tcAEmF":{"name":"unexpected(tag:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/GemCvCertificate/Error.html#/s:17OpenHealthCardKit16GemCvCertificateV5ErrorO7missingyAE04ASN1D00J10DecodedTagO_AG0J6Object_ptcAEmF":{"name":"missing(tag:source:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/GemCvCertificate/Error.html#/s:17OpenHealthCardKit16GemCvCertificateV5ErrorO19missingTagParameteryA2EmF":{"name":"missingTagParameter","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/GemCvCertificate/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"GemCvCertificate"},"Structs/GemCvCertificate.html#/s:17OpenHealthCardKit16GemCvCertificateV15certificateBodyAA7CVCBodyVvp":{"name":"certificateBody","abstract":"<p>CV Certificate - 0x7F4E</p>","parent_name":"GemCvCertificate"},"Structs/GemCvCertificate.html#/s:17OpenHealthCardKit16GemCvCertificateV9signature10Foundation4DataVvp":{"name":"signature","abstract":"<p>Signature - 0x5F37</p>","parent_name":"GemCvCertificate"},"Structs/GemCvCertificate.html#/s:17OpenHealthCardKit16GemCvCertificateV4from4asn1AC04ASN1D00J6Object_p_tKFZ":{"name":"from(asn1:)","abstract":"<p>Create a GemCvCertificate from ASN.1 encoded document</p>","parent_name":"GemCvCertificate"},"Structs/GemCvCertificate.html#/s:17OpenHealthCardKit16GemCvCertificateV4from4dataAC10Foundation4DataV_tKFZ":{"name":"from(data:)","abstract":"<p>Create a GemCvCertificate from ASN.1 encoded document</p>","parent_name":"GemCvCertificate"},"Structs/GemCvCertificate/Tag.html":{"name":"Tag","abstract":"<p>Tag information for GemCvCertificate</p>","parent_name":"GemCvCertificate"},"Structs/GemCvCertificate.html#/s:17OpenHealthCardKit16GemCvCertificateV10asn1encode10Foundation4DataVyKF":{"name":"asn1encode()","abstract":"<p>Serialize the CVC as ASN.1 encoded Data</p>","parent_name":"GemCvCertificate"},"Structs/Format2Pin/Error.html#/s:17OpenHealthCardKit10Format2PinV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/Format2Pin/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV3pin10Foundation4DataVvp":{"name":"pin","abstract":"<p>PIN block</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV7pincodeACSS_tKcfc":{"name":"init(pincode:)","abstract":"<p>Format and check pincode</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV34ExtendedGraphemeClusterLiteralTypea":{"name":"ExtendedGraphemeClusterLiteralType","abstract":"<p>Grapheme for Password is String</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV24UnicodeScalarLiteralTypea":{"name":"UnicodeScalarLiteralType","abstract":"<p>Unicode scalar for Password is String</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV13stringLiteralACSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Initialize a Pincode Format2Pin with a Hex value</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV30extendedGraphemeClusterLiteralACSS_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","abstract":"<p>Initialize a Pincode Format2Pin with a Hex value</p>","parent_name":"Format2Pin"},"Structs/Format2Pin.html#/s:17OpenHealthCardKit10Format2PinV20unicodeScalarLiteralACSS_tcfc":{"name":"init(unicodeScalarLiteral:)","abstract":"<p>Initialize a Pincode Format2Pin with a Hex value</p>","parent_name":"Format2Pin"},"Structs/FileIdentifier/Error.html#/s:17OpenHealthCardKit14FileIdentifierV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>When the File Identifier value is not according to the gemSpec_COS#N006.700, N006.900</p>","parent_name":"Error"},"Structs/FileIdentifier/Error.html#/s:17OpenHealthCardKit14FileIdentifierV5ErrorO13invalidLengthyAESi_tcAEmF":{"name":"invalidLength(length:)","abstract":"<p>When the File Identifier argument is not 2-bytes long</p>","parent_name":"Error"},"Structs/FileIdentifier/Error.html":{"name":"Error","abstract":"<p>FileIdentifier initialization error type</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV8rawValue10Foundation4DataVvp":{"name":"rawValue","abstract":"<p>The actual value representation for the FileIdentifier</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierVyAC10Foundation4DataVKcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV3hexACSS_tKcfc":{"name":"init(hex:)","abstract":"<p>Undocumented</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV7isValidys6ResultOy10Foundation4DataVs5Error_pGAIFZ":{"name":"isValid(_:)","abstract":"<p>Sanity check for file identifier</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV34ExtendedGraphemeClusterLiteralTypea":{"name":"ExtendedGraphemeClusterLiteralType","abstract":"<p>Grapheme for AID is String</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV24UnicodeScalarLiteralTypea":{"name":"UnicodeScalarLiteralType","abstract":"<p>Unicode scalar for AID is String</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV13stringLiteralACSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Initialize FileIdentifier from String</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV30extendedGraphemeClusterLiteralACSS_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","abstract":"<p>Initialize FileIdentifier from String</p>","parent_name":"FileIdentifier"},"Structs/FileIdentifier.html#/s:17OpenHealthCardKit14FileIdentifierV20unicodeScalarLiteralACSS_tcfc":{"name":"init(unicodeScalarLiteral:)","abstract":"<p>Initialize FileIdentifier from String</p>","parent_name":"FileIdentifier"},"Structs/FileControlParameter/Error.html#/s:17OpenHealthCardKit20FileControlParameterV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/FileControlParameter/Error.html#/s:17OpenHealthCardKit20FileControlParameterV5ErrorO09asn1ParseH0yAE10Foundation4DataV_SStcAEmF":{"name":"asn1ParseError(asn1:reason:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/FileControlParameter/Error.html#/s:17OpenHealthCardKit20FileControlParameterV5ErrorO07invalidC0yAESScAEmF":{"name":"invalidCard(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO14numberOfOctetsyA2EmF":{"name":"numberOfOctets","abstract":"<p>Undocumented</p>","parent_name":"Tag"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO14fileDescriptoryA2EmF":{"name":"fileDescriptor","abstract":"<p>Undocumented</p>","parent_name":"Tag"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO14fileIdentifieryA2EmF":{"name":"fileIdentifier","abstract":"<p>Undocumented</p>","parent_name":"Tag"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO21applicationIdentifieryA2EmF":{"name":"applicationIdentifier","abstract":"<p>Undocumented</p>","parent_name":"Tag"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO05endOfE8PositionyA2EmF":{"name":"endOfFilePosition","abstract":"<p>gemSpec_COS#N014.700</p>","parent_name":"Tag"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO05shortE10IdentifieryA2EmF":{"name":"shortFileIdentifier","abstract":"<p>Undocumented</p>","parent_name":"Tag"},"Structs/FileControlParameter/Tag.html#/s:17OpenHealthCardKit20FileControlParameterV3TagO15lifeCycleStatusyA2EmF":{"name":"lifeCycleStatus","abstract":"<p>Undocumented</p>","parent_name":"Tag"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO7unknownyA2EmF":{"name":"unknown","abstract":"<p>No information given (when all bits are 0)</p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO8creationyA2EmF":{"name":"creation","abstract":"<p>File is created (when only bit 1 is set)</p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO14initialisationyA2EmF":{"name":"initialisation","abstract":"<p>File is initialized (when bit 2 is set and 3 and 4 not</p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO9activatedyA2EmF":{"name":"activated","abstract":"<p>File is active <a href=\"when%20bit%203%20and%201%20are%20set\">normal</a></p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO11deactivatedyA2EmF":{"name":"deactivated","abstract":"<p>File is not-active <a href=\"when%20bit%203%20is%20set%20and%20bit%201%20not\">hidden</a></p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO10terminatedyA2EmF":{"name":"terminated","abstract":"<p>File is permanently <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO11deactivatedyA2EmF\">.deactivated</a></code> (when bit 4 and 3 are set)</p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO11proprietaryyA2EmF":{"name":"proprietary","abstract":"<p>File is proprietary - values from 0x10 - 0xff</p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html#/s:17OpenHealthCardKit20FileControlParameterV14LifeCycleStateO05parsehI04byteAESgs5UInt8V_tFZ":{"name":"parseLifeCycle(byte:)","abstract":"<p>Parse a LifeCycleStatus Byte</p>","parent_name":"LifeCycleState"},"Structs/FileControlParameter/LifeCycleState.html":{"name":"LifeCycleState","abstract":"<p>Describes the LifeCycle state of an EF/DF according to the ISO/IEC 7816-4:2005(E) #5.3.3.2 Life cycle status byte.</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV3tagSuvpZ":{"name":"tag","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter/Tag.html":{"name":"Tag","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV6statusAC14LifeCycleStateOvp":{"name":"status","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV4sizeSuvp":{"name":"size","abstract":"<p>Max File size (numberOfOctets gemSpec_COS#N014.000)</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV8readSizeSuSgvp":{"name":"readSize","abstract":"<p>File size (positionLogicalEndOfFile gemSpec_COS#N014.700)</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV14fileDescriptorSSSgvp":{"name":"fileDescriptor","abstract":"<p>Hex String</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV14fileIdentifierAA0eI0VSgvp":{"name":"fileIdentifier","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV21applicationIdentifierAA011ApplicationI0VSgvp":{"name":"applicationIdentifier","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV05shortE10IdentifierAA05ShorteI0VSgvp":{"name":"shortFileIdentifier","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV6status4size14fileDescriptor3fid3aid8shortFid8readSizeA2C14LifeCycleStateO_SuSSSgAA0E10IdentifierVSgAA011ApplicationU0VSgAA05ShorteU0VSgSuSgtcfc":{"name":"init(status:size:fileDescriptor:fid:aid:shortFid:readSize:)","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:17OpenHealthCardKit20FileControlParameterV5parse4dataAC10Foundation4DataV_tKFZ":{"name":"parse(data:)","abstract":"<p>Parse FCP (File Control Parameter) from ASN.1 formatted Data</p>","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"FileControlParameter"},"Structs/FileControlParameter.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"FileControlParameter"},"Structs/ElementaryFile.html#/s:17OpenHealthCardKit14ElementaryFileV3fidAA0F10IdentifierVvp":{"name":"fid","abstract":"<p>Undocumented</p>","parent_name":"ElementaryFile"},"Structs/ElementaryFile.html#/s:17OpenHealthCardKit14ElementaryFileV4sfidAA05ShortF10IdentifierVSgvp":{"name":"sfid","abstract":"<p>Undocumented</p>","parent_name":"ElementaryFile"},"Structs/ElementaryFile.html#/s:17OpenHealthCardKit14ElementaryFileV3fid4sfidAcA0F10IdentifierV_AA05ShortfI0VSgtcfc":{"name":"init(fid:sfid:)","abstract":"<p>Undocumented</p>","parent_name":"ElementaryFile"},"Structs/DedicatedFile.html#/s:17OpenHealthCardKit13DedicatedFileV3aidAA21ApplicationIdentifierVvp":{"name":"aid","abstract":"<p>Undocumented</p>","parent_name":"DedicatedFile"},"Structs/DedicatedFile.html#/s:17OpenHealthCardKit13DedicatedFileV3fidAA0F10IdentifierVSgvp":{"name":"fid","abstract":"<p>Undocumented</p>","parent_name":"DedicatedFile"},"Structs/DedicatedFile.html#/s:17OpenHealthCardKit13DedicatedFileV3aid3fidAcA21ApplicationIdentifierV_AA0fJ0VSgtcfc":{"name":"init(aid:fid:)","abstract":"<p>Undocumented</p>","parent_name":"DedicatedFile"},"Structs/ApplicationIdentifier/Error.html#/s:17OpenHealthCardKit21ApplicationIdentifierV5ErrorO15illegalArgumentyAESScAEmF":{"name":"illegalArgument(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/ApplicationIdentifier/Error.html#/s:17OpenHealthCardKit21ApplicationIdentifierV5ErrorO13invalidLengthyAESi_tcAEmF":{"name":"invalidLength(length:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Structs/ApplicationIdentifier/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV8rawValue10Foundation4DataVvp":{"name":"rawValue","abstract":"<p>The actual value representation for the ApplicationIdentifier</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierVyAC10Foundation4DataVKcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV3hexACSS_tKcfc":{"name":"init(hex:)","abstract":"<p>Undocumented</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV7isValidys6ResultOy10Foundation4DataVs5Error_pGAIFZ":{"name":"isValid(_:)","abstract":"<p>Sanity check for application file identifier</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV34ExtendedGraphemeClusterLiteralTypea":{"name":"ExtendedGraphemeClusterLiteralType","abstract":"<p>Grapheme for AID is String</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV24UnicodeScalarLiteralTypea":{"name":"UnicodeScalarLiteralType","abstract":"<p>Unicode scalar for AID is String</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV20unicodeScalarLiteralACSS_tcfc":{"name":"init(unicodeScalarLiteral:)","abstract":"<p>Initialize ApplicationIdentifier from UnicodeScalar</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV30extendedGraphemeClusterLiteralACSS_tcfc":{"name":"init(extendedGraphemeClusterLiteral:)","abstract":"<p>Initialize ApplicationIdentifier from ExtendedGraphemeCluster</p>","parent_name":"ApplicationIdentifier"},"Structs/ApplicationIdentifier.html#/s:17OpenHealthCardKit21ApplicationIdentifierV13stringLiteralACSS_tcfc":{"name":"init(stringLiteral:)","abstract":"<p>Initialize ApplicationIdentifier from String</p>","parent_name":"ApplicationIdentifier"},"Structs/InvalidCommandChannel.html#/s:17OpenHealthCardKit21InvalidCommandChannelV9channelNos5UInt8Vvp":{"name":"channelNo","abstract":"<p>The invalid channel number</p>","parent_name":"InvalidCommandChannel"},"Structs/CardProtocol.html#/s:17OpenHealthCardKit0C8ProtocolV8rawValueSuvp":{"name":"rawValue","abstract":"<p>Bitmask encoded protocols</p>","parent_name":"CardProtocol"},"Structs/CardProtocol.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"CardProtocol"},"Structs/CardProtocol.html#/s:17OpenHealthCardKit0C8ProtocolV2t0ACvpZ":{"name":"t0","abstract":"<p>T=0 protocol</p>","parent_name":"CardProtocol"},"Structs/CardProtocol.html#/s:17OpenHealthCardKit0C8ProtocolV2t1ACvpZ":{"name":"t1","abstract":"<p>T=1 protocol</p>","parent_name":"CardProtocol"},"Structs/CardProtocol.html#/s:17OpenHealthCardKit0C8ProtocolV3t15ACvpZ":{"name":"t15","abstract":"<p>T=15 protocol</p>","parent_name":"CardProtocol"},"Structs/CardProtocol.html#/s:17OpenHealthCardKit0C8ProtocolV3anyACvpZ":{"name":"any","abstract":"<p>T=* protocol</p>","parent_name":"CardProtocol"},"Structs/CardProtocol.html":{"name":"CardProtocol","abstract":"<p>SmartCard comms protocol representation</p>"},"Structs/InvalidCommandChannel.html":{"name":"InvalidCommandChannel","abstract":"<p>Error when an invalid channel number is chosen</p>"},"Structs/ApplicationIdentifier.html":{"name":"ApplicationIdentifier","abstract":"<p>ApplicationIdentifier representation to prevent (accidental) misuse"},"Structs/DedicatedFile.html":{"name":"DedicatedFile","abstract":"<p>DF: Dedicated file</p>"},"Structs/ElementaryFile.html":{"name":"ElementaryFile","abstract":"<p>EF: Elementary File</p>"},"Structs/FileControlParameter.html":{"name":"FileControlParameter","abstract":"<p>Undocumented</p>"},"Structs/FileIdentifier.html":{"name":"FileIdentifier","abstract":"<p>File Identifier - gemSpec_COS 8.1.1 #N006.700, N006.900</p>"},"Structs/Format2Pin.html":{"name":"Format2Pin","abstract":"<p>PIN block, formatted according to gemSpec_COS 8.1.7"},"Structs/GemCvCertificate.html":{"name":"GemCvCertificate","abstract":"<p>Gematik Card verifiable (CV) Certificate (gemSpec_PKI#6.7.5)</p>"},"Structs/CVCBody.html":{"name":"CVCBody","abstract":"<p>an Iso7816CertificateBody structure. (gemSpec_PKI#6.7.5)</p>"},"Structs/CVCChat.html":{"name":"CVCChat","abstract":"<p>CVC Certificate Holder Authentication Template</p>"},"Structs/CVCPublicKey.html":{"name":"CVCPublicKey","abstract":"<p>ASN.1 encoded public key</p>"},"Structs/DHPubKey.html":{"name":"DHPubKey","abstract":"<p>Diffie Hellman Public Key</p>"},"Structs/RSAPubKey.html":{"name":"RSAPubKey","abstract":"<p>RSA Public Key</p>"},"Structs/ECDSAPubKey.html":{"name":"ECDSAPubKey","abstract":"<p>Elliptic Curve Public Key</p>"},"Structs/Key.html":{"name":"Key","abstract":"<p>Undocumented</p>"},"Structs/Password.html":{"name":"Password","abstract":"<p>Password Identifier as per gemSpec_COS#N015.000</p>"},"Structs/ShortFileIdentifier.html":{"name":"ShortFileIdentifier","abstract":"<p>Short File Identifier - gemSpec_COS#N007.000</p>"},"Structs/HealthCardCommand.html":{"name":"HealthCardCommand","abstract":"<p><em>HealthCardCommand</em> is a struct holding a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CommandType.html\">CommandType</a></code> object and a dictionary"},"Structs/EgkFileSystem.html":{"name":"EgkFileSystem","abstract":"<p>Card File system layout for EGK smart-cards</p>"},"Structs/HbaFileSystem.html":{"name":"HbaFileSystem","abstract":"<p>Card File system layout for HBA smart-cards</p>"},"Structs.html#/s:17OpenHealthCardKit14SmcbFileSystemV":{"name":"SmcbFileSystem","abstract":"<p>Card File system layout for SMC-B smart-cards</p>"},"Structs/CAN.html":{"name":"CAN","abstract":"<p>Channel Access Number</p>"},"Structs/CardVersion2.html":{"name":"CardVersion2","abstract":"<p>Represent the CardVersion2 information of HealthCard"},"Structs/HealthCardResponse.html":{"name":"HealthCardResponse","abstract":"<p>A struct holding an APDU response and its matching <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ResponseStatus.html\">ResponseStatus</a></code>"},"Structs/EllipticCurve.html":{"name":"EllipticCurve","abstract":"<p>Structure holding parameters for defining Elliptic curves and its arithmetic operations</p>"},"Protocols/SecureMessaging.html#/s:17OpenHealthCardKit15SecureMessagingP7encrypt7commandAA11CommandType_pAaF_p_tKF":{"name":"encrypt(command:)","abstract":"<p>Encrypt the APDU Command.</p>","parent_name":"SecureMessaging"},"Protocols/SecureMessaging.html#/s:17OpenHealthCardKit15SecureMessagingP7decrypt8responseAA12ResponseType_pAaF_p_tKF":{"name":"decrypt(response:)","abstract":"<p>Decrypt the APDU Response.</p>","parent_name":"SecureMessaging"},"Protocols/SecureMessaging.html#/s:17OpenHealthCardKit15SecureMessagingP10invalidateyyF":{"name":"invalidate()","abstract":"<p>Destruct the information held by this object.</p>","parent_name":"SecureMessaging"},"Protocols/HealthCardFileSystemType.html#/s:17OpenHealthCardKit0bC14FileSystemTypeP0ceF0Qa":{"name":"CardFileSystem","abstract":"<p>bind/associate the CardFileSystem type</p>","parent_name":"HealthCardFileSystemType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypeP6statusAA0bC6StatusOvp":{"name":"status","abstract":"<p>The current status for the Card object</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypeP07currentC7ChannelAA0cgE0_pvp":{"name":"currentCardChannel","abstract":"<p>The current (open) card channel that can be used to send APDU messages</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypePAAE10disconnect5resetySb_tKF":{"name":"disconnect(reset:)","abstract":"<p>Convenience function to disconnect and invalidate an possibly opened session with the underlying card</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypePAAE18readAutCertificate7Combine12AnyPublisherVyAA0G8CertInfoO4info_10Foundation4DataV11certificatets5Error_pGyF":{"name":"readAutCertificate()","abstract":"<p>Read the MF/DF.ESIGN.EF.C.CH.AUT.[E256/R2048] certificate from the receiver</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypePAAE4sign9challenge7Combine12AnyPublisherVyAA0bc8ResponseE0_ps5Error_pG10Foundation4DataV_tF":{"name":"sign(challenge:)","abstract":"<p>Sign a challenge (for example a hash value) for authentication.</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypePAAE6verify3pin4type7Combine12AnyPublisherVyAA17VerifyPinResponseOs5Error_pGAA07Format2M0V_AA13EgkFileSystemV0M0OtF":{"name":"verify(pin:type:)","abstract":"<p>Verify Password for a Pin type</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypePAAE16readSelectedFile8expected011failOnEndOfH7Warning6offset7Combine12AnyPublisherVy10Foundation4DataVs5Error_pGSiSg_SbSitF":{"name":"readSelectedFile(expected:failOnEndOfFileWarning:offset:)","abstract":"<p>Read the current selected DF/EF File</p>","parent_name":"HealthCardType"},"Protocols/HealthCardType.html#/s:17OpenHealthCardKit0bC4TypePAAE15selectDedicated4file3fcp6length7Combine12AnyPublisherVyAA14ResponseStatusO_AA20FileControlParameterVSgts5Error_pGAA0gP0V_SbSitF":{"name":"selectDedicated(file:fcp:length:)","abstract":"<p>Select a dedicated file with or without requesting the FileIdentifier&rsquo;s File Control Parameter.</p>","parent_name":"HealthCardType"},"Protocols/HealthCardResponseType.html#/s:17OpenHealthCardKit0bC12ResponseTypeP14responseStatusAA0eH0Ovp":{"name":"responseStatus","abstract":"<p>Returns <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ResponseStatus.html\">ResponseStatus</a></code> derived from the executed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HealthCardCommand.html\">HealthCardCommand</a></code> and <em>sw</em> value of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ResponseType.html\">ResponseType</a></code>.</p>","parent_name":"HealthCardResponseType"},"Protocols/HealthCardResponseType.html#/s:17OpenHealthCardKit0bC12ResponseTypePAAE4from8response3forAaB_pAA0eF0_p_AA0bc7CommandF0_ptFZ":{"name":"from(response:for:)","abstract":"<p>Undocumented</p>","parent_name":"HealthCardResponseType"},"Protocols/HealthCardCommandType.html#/s:17OpenHealthCardKit0bC11CommandTypeP16responseStatusesSDys6UInt16VAA14ResponseStatusOGvp":{"name":"responseStatuses","abstract":"<p>Returns a dictionary mapping from <em>UInt16</em> status codes (e.g. 0x9000) to its command context specific","parent_name":"HealthCardCommandType"},"Protocols/HealthCardCommandType.html#/s:17OpenHealthCardKit0bC11CommandTypePAAE14responseStatus4fromAA08ResponseH0Os6UInt16V_tF":{"name":"responseStatus(from:)","abstract":"<p>Returns context specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ResponseStatus.html\">ResponseStatus</a></code> from a UInt16 code (like 0x9000, 0x6400, &hellip;)</p>","parent_name":"HealthCardCommandType"},"Protocols/HealthCardCommandType.html#/s:17OpenHealthCardKit0bC11CommandTypePAAE9publisher3for12writeTimeout04readJ07Combine12AnyPublisherVyAA0bc8ResponseF0_ps5Error_pGAA0bcF0_p_S2dtF":{"name":"publisher(for:writeTimeout:readTimeout:)","abstract":"<p>Execute the command on a given card</p>","parent_name":"HealthCardCommandType"},"Protocols/HealthCardCommandType.html#/s:17OpenHealthCardKit0bC11CommandTypePAAE9publisher3for12writeTimeout04readJ07Combine12AnyPublisherVyAA0bc8ResponseF0_ps5Error_pGAA0c7ChannelF0_p_S2dtF":{"name":"publisher(for:writeTimeout:readTimeout:)","abstract":"<p>Execute the command on a given channel</p>","parent_name":"HealthCardCommandType"},"Protocols/CardObjectIdentifierType.html#/s:17OpenHealthCardKit0C20ObjectIdentifierTypeP8rawValue10Foundation4DataVvp":{"name":"rawValue","abstract":"<p>The representation for the Card Object Identifier (E.g. AID, FID)</p>","parent_name":"CardObjectIdentifierType"},"Protocols/CardObjectIdentifierType.html#/s:17OpenHealthCardKit0C20ObjectIdentifierTypeP7isValidys6ResultOy10Foundation4DataVs5Error_pGAIFZ":{"name":"isValid(_:)","abstract":"<p>Figure out whether a value could be plausible as identifier type</p>","parent_name":"CardObjectIdentifierType"},"Protocols/CardObjectIdentifierType.html#/s:17OpenHealthCardKit0C20ObjectIdentifierTypePAAE2eeoiySbx_xtFZ":{"name":"==(_:_:)","abstract":"<p>Check for equality</p>","parent_name":"CardObjectIdentifierType"},"Protocols/CardKeyReferenceType.html#/s:17OpenHealthCardKit0C16KeyReferenceTypeP09calculateeF010dfSpecifics5UInt8VSb_tF":{"name":"calculateKeyReference(dfSpecific:)","abstract":"<p>Calculate a key reference</p>","parent_name":"CardKeyReferenceType"},"Protocols/CardReaderType.html#/s:17OpenHealthCardKit0C10ReaderTypeP4nameSSvp":{"name":"name","abstract":"<p>CardReader name</p>","parent_name":"CardReaderType"},"Protocols/CardReaderType.html#/s:17OpenHealthCardKit0C10ReaderTypeP11displayNameSSvp":{"name":"displayName","abstract":"<p>Returns the system displayable name of this reader.</p>","parent_name":"CardReaderType"},"Protocols/CardReaderType.html#/s:17OpenHealthCardKit0C10ReaderTypeP11cardPresentSbvp":{"name":"cardPresent","abstract":"<p>Whether there is a SmartCard present (mute or not) at the time of reading the property</p>","parent_name":"CardReaderType"},"Protocols/CardReaderType.html#/s:17OpenHealthCardKit0C10ReaderTypeP02onC15PresenceChangedyyyAaB_pcF":{"name":"onCardPresenceChanged(_:)","abstract":"<p>Add an execution block for when a card is presented</p>","parent_name":"CardReaderType"},"Protocols/CardReaderType.html#/s:17OpenHealthCardKit0C10ReaderTypeP7connectyAA0cF0_pSgSDySSypGKF":{"name":"connect(_:)","abstract":"<p>Connect to the currently present SmartCard.</p>","parent_name":"CardReaderType"},"Protocols/CardReaderControllerType.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP4nameSSvp":{"name":"name","abstract":"<p>The identifier name for the controller</p>","parent_name":"CardReaderControllerType"},"Protocols/CardReaderControllerType.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP11cardReadersSayAA0ceG0_pGvp":{"name":"cardReaders","abstract":"<p>The currently available card readers</p>","parent_name":"CardReaderControllerType"},"Protocols/CardReaderControllerType.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP3add8delegateyAA0ceF8Delegate_p_tF":{"name":"add(delegate:)","abstract":"<p>Add a delegate to get informed when the cardReaders array changes.</p>","parent_name":"CardReaderControllerType"},"Protocols/CardReaderControllerType.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP6remove8delegateyAA0ceF8Delegate_p_tF":{"name":"remove(delegate:)","abstract":"<p>Remove a previously added delegate.</p>","parent_name":"CardReaderControllerType"},"Protocols/CardReaderControllerDelegate.html#/s:17OpenHealthCardKit0C24ReaderControllerDelegateP04cardE010controller10didConnectyAA0ceF4Type_p_AA0ceL0_ptF":{"name":"cardReader(controller:didConnect:)","abstract":"<p>Inform the delegate of a (new) connected/available <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CardReaderType.html\">CardReaderType</a></code>.</p>","parent_name":"CardReaderControllerDelegate"},"Protocols/CardReaderControllerDelegate.html#/s:17OpenHealthCardKit0C24ReaderControllerDelegateP04cardE010controller13didDisconnectyAA0ceF4Type_p_AA0ceL0_ptF":{"name":"cardReader(controller:didDisconnect:)","abstract":"<p>Inform the delegate of a card reader disconnect.</p>","parent_name":"CardReaderControllerDelegate"},"Protocols/CardReaderProviderType.html#/c:@M@OpenHealthCardKit@objc(pl)CardReaderProviderType(cm)provideCardReaderController":{"name":"provideCardReaderController()","abstract":"<p>Tell the provider to load and initialize the CardReaderController</p>","parent_name":"CardReaderProviderType"},"Protocols/CardReaderProviderType.html#/c:@M@OpenHealthCardKit@objc(pl)CardReaderProviderType(cpy)descriptor":{"name":"descriptor","abstract":"<p>Card Reader Provider information</p>","parent_name":"CardReaderProviderType"},"Protocols/ProviderDescriptorType.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)name":{"name":"name","abstract":"<p>Provider (displayable) commercial name</p>","parent_name":"ProviderDescriptorType"},"Protocols/ProviderDescriptorType.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)license":{"name":"license","abstract":"<p>License</p>","parent_name":"ProviderDescriptorType"},"Protocols/ProviderDescriptorType.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)providerDescription":{"name":"providerDescription","abstract":"<p>Provider and/or card reader description</p>","parent_name":"ProviderDescriptorType"},"Protocols/ProviderDescriptorType.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)shortDescription":{"name":"shortDescription","abstract":"<p>Short description</p>","parent_name":"ProviderDescriptorType"},"Protocols/ProviderDescriptorType.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)providerClassName":{"name":"providerClassName","abstract":"<p>Principle className for communication with the (hardware) card reader</p>","parent_name":"ProviderDescriptorType"},"Protocols/ResponseType.html#/s:17OpenHealthCardKit12ResponseTypeP4data10Foundation4DataVSgvp":{"name":"data","abstract":"<p>Returns bytes in the response body. If this APDU has no body, this method returns nil</p>","parent_name":"ResponseType"},"Protocols/ResponseType.html#/s:17OpenHealthCardKit12ResponseTypeP2nrSivp":{"name":"nr","abstract":"<p>Returns the number of data bytes in the response body (Nr) or 0 if this APDU has no body.","parent_name":"ResponseType"},"Protocols/ResponseType.html#/s:17OpenHealthCardKit12ResponseTypeP3sw1s5UInt8Vvp":{"name":"sw1","abstract":"<p>Returns the value of the status byte SW1 as a value between 0 and 255.</p>","parent_name":"ResponseType"},"Protocols/ResponseType.html#/s:17OpenHealthCardKit12ResponseTypeP3sw2s5UInt8Vvp":{"name":"sw2","abstract":"<p>Returns the value of the status byte SW2 as a value between 0 and 255.</p>","parent_name":"ResponseType"},"Protocols/ResponseType.html#/s:17OpenHealthCardKit12ResponseTypeP2sws6UInt16Vvp":{"name":"sw","abstract":"<p>Returns the value of the status bytes SW1 and SW2 as a single status word SW.</p>","parent_name":"ResponseType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP4data10Foundation4DataVSgvp":{"name":"data","abstract":"<p>Returns bytes in the command body. If this APDU has no body, this property should return nil</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP2neSiSgvp":{"name":"ne","abstract":"<p>Returns the maximum number of expected data bytes in a response APDU (Ne/Le).","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP2ncSivp":{"name":"nc","abstract":"<p>Returns the number of data bytes in the command body (Nc) or 0 if this APDU has no body.","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP3clas5UInt8Vvp":{"name":"cla","abstract":"<p>Returns the value of the class byte CLA.</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP3inss5UInt8Vvp":{"name":"ins","abstract":"<p>Returns the value of the instruction byte INS.</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP2p1s5UInt8Vvp":{"name":"p1","abstract":"<p>Returns the value of the parameter byte P1.</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP2p2s5UInt8Vvp":{"name":"p2","abstract":"<p>Returns the value of the parameter byte P2.</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypeP5bytes10Foundation4DataVvp":{"name":"bytes","abstract":"<p>Serialized APDU message</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypePAAE16toLogicalChannel9channelNoAaB_ps5UInt8V_tKF":{"name":"toLogicalChannel(channelNo:)","abstract":"<p>Convert a Command to be send on a given channel No</p>","parent_name":"CommandType"},"Protocols/CommandType.html#/s:17OpenHealthCardKit11CommandTypePAAE18isPaceKeyEncryptedSbvp":{"name":"isPaceKeyEncrypted","abstract":"<p>Undocumented</p>","parent_name":"CommandType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP3atr10Foundation4DataVvp":{"name":"atr","abstract":"<p>Card Answer-to-reset configuration</p>","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP8protocolAA0C8ProtocolVvp":{"name":"protocol","abstract":"<p>Card supported protocol(s)</p>","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP16openBasicChannelAA0chE0_pyKF":{"name":"openBasicChannel()","abstract":"<p>Open a communication channel to the Card.</p>","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP16openLogicChannelAA0chE0_pyKF":{"name":"openLogicChannel()","abstract":"<p>Open a new logical channel. The channel is opened issuing a MANAGE CHANNEL command that","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP15transmitControl7command4data10Foundation4DataVSi_AItKF":{"name":"transmitControl(command:data:)","abstract":"<p>Transmit a control command to the Card/Slot</p>","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP28initialApplicationIdentifier10Foundation4DataVSgyKF":{"name":"initialApplicationIdentifier()","abstract":"<p>Provide an initial application identifier of an application on the underlying card (f.e. the root application).</p>","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypeP10disconnect5resetySb_tKF":{"name":"disconnect(reset:)","abstract":"<p>Disconnect connection to the Card.</p>","parent_name":"CardType"},"Protocols/CardType.html#/s:17OpenHealthCardKit0C4TypePAAE17openSecureSession3can12writeTimeout04readK07Combine12AnyPublisherVyAA0gbcE0_ps5Error_pGAA3CANV_S2dtF":{"name":"openSecureSession(can:writeTimeout:readTimeout:)","abstract":"<p>Open a secure session with a Card for further scheduling/attaching Publisher commands</p>","parent_name":"CardType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP4cardAA0cF0_pvp":{"name":"card","abstract":"<p>The associated card with this channel","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP13channelNumberSivp":{"name":"channelNumber","abstract":"<p>The channel number</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP23extendedLengthSupportedSbvp":{"name":"extendedLengthSupported","abstract":"<p>Identify whether a channel supports APDU extended length commands/responses</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP16maxMessageLengthSivp":{"name":"maxMessageLength","abstract":"<p>Max length of APDU body in bytes.</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP17maxResponseLengthSivp":{"name":"maxResponseLength","abstract":"<p>Max length of a APDU response.</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP8transmit7command12writeTimeout04readJ0AA08ResponseF0_pAA07CommandF0_p_S2dtKF":{"name":"transmit(command:writeTimeout:readTimeout:)","abstract":"<p>Transceive a (APDU) command</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypeP5closeyyKF":{"name":"close()","abstract":"<p>Close the channel for subsequent actions.</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypePAAE09determineC3Aid12writeTimeout04readJ07Combine12AnyPublisherVyAA0cH0Os5Error_pGSd_SdtF":{"name":"determineCardAid(writeTimeout:readTimeout:)","abstract":"<p>Determines the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/CardAid.html\">CardAid</a></code> of the card either by","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypePAAE25readKeyAgreementAlgorithm7cardAid12writeTimeout0gN07Combine12AnyPublisherVyAA0hI0C0J0Os5Error_pGAA0cL0OSg_S2dtF":{"name":"readKeyAgreementAlgorithm(cardAid:writeTimeout:readTimeout:)","abstract":"<p>Undocumented</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypePAAE22expectedLengthWildcardSivp":{"name":"expectedLengthWildcard","abstract":"<p>Undocumented</p>","parent_name":"CardChannelType"},"Protocols/CardChannelType.html#/s:17OpenHealthCardKit0C11ChannelTypePAAE04readcF07cardAid12writeTimeout0gK07Combine12AnyPublisherVyAA0bc8PropertyF0Os5Error_pGAA0cI0OSg_S2dtF":{"name":"readCardType(cardAid:writeTimeout:readTimeout:)","abstract":"<p>Determine <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/HealthCardPropertyType.html\">HealthCardPropertyType</a></code> either by known initialApplicationIdentifier of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CardType.html\">CardType</a></code>","parent_name":"CardChannelType"},"Protocols/CardReaderControllerManagerType.html#/s:17OpenHealthCardKit0C27ReaderControllerManagerTypeP04cardE11ControllersSayAA0cefH0_pGvp":{"name":"cardReaderControllers","abstract":"<p>An array with card reader controllers for all card reader providers</p>","parent_name":"CardReaderControllerManagerType"},"Protocols/CardReaderControllerManagerType.html#/s:17OpenHealthCardKit0C27ReaderControllerManagerTypeP04cardE19ProviderDescriptorsSayAA0j10DescriptorH0_pGvp":{"name":"cardReaderProviderDescriptors","abstract":"<p>An array with all card reader provider descriptors found</p>","parent_name":"CardReaderControllerManagerType"},"Protocols/CardReaderControllerManagerType.html#/s:17OpenHealthCardKit0C27ReaderControllerManagerTypePAAE04cardE13ProviderNamesSaySSGvp":{"name":"cardReaderProviderNames","abstract":"<p>An array of all names of each card reader provider available</p>","parent_name":"CardReaderControllerManagerType"},"Protocols/CardReaderControllerManagerType.html":{"name":"CardReaderControllerManagerType","abstract":"<p>The protocol represents the behavior for a ServiceLoader that provides <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CardReaderControllerType.html\">CardReaderControllerType</a></code>s</p>"},"Protocols/CardChannelType.html":{"name":"CardChannelType","abstract":"<p>General card communications protocol</p>"},"Protocols/CardType.html":{"name":"CardType","abstract":"<p>General card representation</p>"},"Protocols/CommandType.html":{"name":"CommandType","abstract":"<p>SmartCard Application Protocol Data Unit - Command</p>"},"Protocols/ResponseType.html":{"name":"ResponseType","abstract":"<p>SmartCard Application Protocol Data Unit - Response</p>"},"Protocols/ProviderDescriptorType.html":{"name":"ProviderDescriptorType","abstract":"<p>Card Reader Provider information</p>"},"Protocols/CardReaderProviderType.html":{"name":"CardReaderProviderType","abstract":"<p>The <code>CardReaderProviderType</code> protocol serves as the gateway for third-party"},"Protocols/CardReaderControllerDelegate.html":{"name":"CardReaderControllerDelegate","abstract":"<p>Delegate methods for the CardReaderController</p>"},"Protocols/CardReaderControllerType.html":{"name":"CardReaderControllerType","abstract":"<p>Controller representation for managing card readers</p>"},"Protocols/CardReaderType.html":{"name":"CardReaderType","abstract":"<p>General card reader representation.</p>"},"Protocols.html#/s:17OpenHealthCardKit0C8ItemTypeP":{"name":"CardItemType","abstract":"<p>Card item</p>"},"Protocols/CardKeyReferenceType.html":{"name":"CardKeyReferenceType","abstract":"<p>Key reference</p>"},"Protocols/CardObjectIdentifierType.html":{"name":"CardObjectIdentifierType","abstract":"<p>Undocumented</p>"},"Protocols/HealthCardCommandType.html":{"name":"HealthCardCommandType","abstract":"<p>Undocumented</p>"},"Protocols/HealthCardResponseType.html":{"name":"HealthCardResponseType","abstract":"<p>Undocumented</p>"},"Protocols/HealthCardType.html":{"name":"HealthCardType","abstract":"<p>HealthCard classes should implement the HealthCardType protocol</p>"},"Protocols/HealthCardFileSystemType.html":{"name":"HealthCardFileSystemType","abstract":"<p>Protocol abstraction for the various Card file systems</p>"},"Protocols.html#/s:17OpenHealthCardKit06SecurebC4TypeP":{"name":"SecureHealthCardType","abstract":"<p><code>SecureHealthCardType</code> extends the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HealthCardType.html\">HealthCardType</a></code> protocol to indicate that this instance has established"},"Protocols/SecureMessaging.html":{"name":"SecureMessaging","abstract":"<p>Component that attached to a <code>SecureCardChannel</code> takes care of message de-/encryption.</p>"},"Functions.html#/s:17OpenHealthCardKit2eeoiySbAA11CommandType_p_AaC_ptF":{"name":"==(_:_:)","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CommandType.html\">CommandType</a></code> adheres to <code>Equatable</code></p>"},"Functions.html#/s:17OpenHealthCardKit2eeoiySbAA12ResponseType_p_AaC_ptF":{"name":"==(_:_:)","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ResponseType.html\">ResponseType</a></code> adheres to <code>Equatable</code></p>"},"Extensions/NFCISO7816APDU.html#/s:17OpenHealthCardKityXeXecfc":{"name":"init(command:)","abstract":"<p>Undocumented</p>","parent_name":"NFCISO7816APDU"},"Extensions/AES128PaceKey/Error.html#/s:17OpenHealthCardKit13AES128PaceKeyC5ErrorO20apduAlreadyEncryptedyA2EmF":{"name":"apduAlreadyEncrypted","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Extensions/AES128PaceKey/Error.html#/s:17OpenHealthCardKit13AES128PaceKeyC5ErrorO26encryptedResponseMalformedyA2EmF":{"name":"encryptedResponseMalformed","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Extensions/AES128PaceKey/Error.html#/s:17OpenHealthCardKit13AES128PaceKeyC5ErrorO36secureMessagingMacVerificationFailedyA2EmF":{"name":"secureMessagingMacVerificationFailed","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Extensions/AES128PaceKey/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"AES128PaceKey"},"Extensions/BigInt.html#/s:6BigIntAAV17OpenHealthCardKitE16fromUnsignedData3buf3off6lengthAB10Foundation0I0V_S2itFZ":{"name":"fromUnsignedData(buf:off:length:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Extensions/AES/CipherError.html#/s:17OpenHealthCardKit3AESO11CipherErrorO19aesDecryptionFailedyAEs5Int32V_tcAEmF":{"name":"aesDecryptionFailed(status:)","abstract":"<p>Undocumented</p>","parent_name":"CipherError"},"Extensions/AES/CipherError.html#/s:17OpenHealthCardKit3AESO11CipherErrorO19aesEncryptionFailedyAEs5Int32V_tcAEmF":{"name":"aesEncryptionFailed(status:)","abstract":"<p>Undocumented</p>","parent_name":"CipherError"},"Extensions/AES/CipherError.html#/s:17OpenHealthCardKit3AESO11CipherErrorO24cmacAuthenticationFailedyA2EmF":{"name":"cmacAuthenticationFailed","abstract":"<p>Undocumented</p>","parent_name":"CipherError"},"Extensions/AES/CipherError.html#/s:17OpenHealthCardKit3AESO11CipherErrorO18AESCMACunsupportedyA2EmF":{"name":"AESCMACunsupported","abstract":"<p>Undocumented</p>","parent_name":"CipherError"},"Extensions/AES/CipherError.html":{"name":"CipherError","abstract":"<p>Undocumented</p>","parent_name":"AES"},"Extensions/UInt8.html#/s:s5UInt8V17OpenHealthCardKitE5bytes10Foundation4DataVvp":{"name":"bytes","abstract":"<p>Undocumented</p>","parent_name":"UInt8"},"Extensions/Int.html#/s:Si17OpenHealthCardKitE5isNot_4elseySi_s5Error_ptKF":{"name":"isNot(_:else:)","abstract":"<p>Undocumented</p>","parent_name":"Int"},"Extensions/Data.html#/s:10Foundation4DataV17OpenHealthCardKitE9normalize2to16paddingIndicatorACSi_s5UInt8VtF":{"name":"normalize(to:paddingIndicator:)","abstract":"<p>Truncates or pads with  the Data object from the left until the given sized is reached.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV17OpenHealthCardKitE4sha1ACyF":{"name":"sha1()","abstract":"<p>The 128-bit Secure Hash (SHA1) of Data block <code>self</code></p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV17OpenHealthCardKitE19dropLeadingZeroByteACvp":{"name":"dropLeadingZeroByte","abstract":"<p>Undocumented</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV17OpenHealthCardKitE20padWithLeadingZeroes11totalLengthACSi_tF":{"name":"padWithLeadingZeroes(totalLength:)","abstract":"<p>Undocumented</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Extensions/Int.html":{"name":"Int"},"Extensions/UInt8.html":{"name":"UInt8"},"Extensions/AES.html":{"name":"AES"},"Extensions/BigInt.html":{"name":"BigInt"},"Extensions/AES128PaceKey.html":{"name":"AES128PaceKey"},"Extensions/NFCISO7816APDU.html":{"name":"NFCISO7816APDU"},"Enums/SelectError.html#/s:17OpenHealthCardKit11SelectErrorO08failedToE3AidyAcA21ApplicationIdentifierV_AA14ResponseStatusOSgtcACmF":{"name":"failedToSelectAid(_:status:)","abstract":"<p>Undocumented</p>","parent_name":"SelectError"},"Enums/SelectError.html#/s:17OpenHealthCardKit11SelectErrorO08failedToE3FidyAcA14FileIdentifierV_AA14ResponseStatusOSgtcACmF":{"name":"failedToSelectFid(_:status:)","abstract":"<p>Undocumented</p>","parent_name":"SelectError"},"Enums/ReadError.html#/s:17OpenHealthCardKit9ReadErrorO18unexpectedResponseyAcA0H6StatusO_tcACmF":{"name":"unexpectedResponse(state:)","abstract":"<p>The response status did not match the expected response status</p>","parent_name":"ReadError"},"Enums/ReadError.html#/s:17OpenHealthCardKit9ReadErrorO6noDatayAcA14ResponseStatusO_tcACmF":{"name":"noData(state:)","abstract":"<p>No data has been returned</p>","parent_name":"ReadError"},"Enums/ReadError.html#/s:17OpenHealthCardKit9ReadErrorO010fcpMissingE4SizeyAcA14ResponseStatusO_tcACmF":{"name":"fcpMissingReadSize(state:)","abstract":"<p>Undocumented</p>","parent_name":"ReadError"},"Enums/CardAid.html#/s:17OpenHealthCardKit0C3AidO3egkyA2CmF":{"name":"egk","abstract":"<p>Undocumented</p>","parent_name":"CardAid"},"Enums/CardAid.html#/s:17OpenHealthCardKit0C3AidO3hbayA2CmF":{"name":"hba","abstract":"<p>Undocumented</p>","parent_name":"CardAid"},"Enums/CardAid.html#/s:17OpenHealthCardKit0C3AidO4smcbyA2CmF":{"name":"smcb","abstract":"<p>Undocumented</p>","parent_name":"CardAid"},"Enums/CardAid.html#/s:17OpenHealthCardKit0C3AidO02efC6AccessAA19ShortFileIdentifierVvp":{"name":"efCardAccess","abstract":"<p>5.3.2 MF / EF.CardAccess (eGK)","parent_name":"CardAid"},"Enums/CardAid.html#/s:17OpenHealthCardKit0C3AidO13efVersion2SfiAA19ShortFileIdentifierVvp":{"name":"efVersion2Sfi","abstract":"<p>5.3.4 MF / EF.Version2 (SMC-B)","parent_name":"CardAid"},"Enums/ECPoint/InvalidArgument.html#/s:17OpenHealthCardKit7ECPointO15InvalidArgumentO5emptyyA2EmF":{"name":"empty","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Enums/ECPoint/InvalidArgument.html#/s:17OpenHealthCardKit7ECPointO15InvalidArgumentO20encodingNotSupportedyA2EmF":{"name":"encodingNotSupported","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Enums/ECPoint/InvalidArgument.html#/s:17OpenHealthCardKit7ECPointO15InvalidArgumentO20invalidPointEncodingyA2EmF":{"name":"invalidPointEncoding","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Enums/ECPoint/InvalidArgument.html#/s:17OpenHealthCardKit7ECPointO15InvalidArgumentO23invalidInfinityEncodingyA2EmF":{"name":"invalidInfinityEncoding","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Enums/ECPoint.html#/s:17OpenHealthCardKit7ECPointO8infiniteyA2CmF":{"name":"infinite","abstract":"<p>Represents the point infinity</p>","parent_name":"ECPoint"},"Enums/ECPoint.html#/s:17OpenHealthCardKit7ECPointO6finiteyAC6BigIntAEV1x_AF1yt_tcACmF":{"name":"finite(_:)","abstract":"<p>Represents a finite point with coordinates (x: BigInt, y: BigInt)</p>","parent_name":"ECPoint"},"Enums/ECPoint/InvalidArgument.html":{"name":"InvalidArgument","abstract":"<p>Undocumented</p>","parent_name":"ECPoint"},"Enums/ECPoint.html#/s:17OpenHealthCardKit7ECPointO5parse7encodedAC10Foundation4DataV_tKFZ":{"name":"parse(encoded:)","abstract":"<p>For now we only handle uncompressed input like [0x4, x, y]</p>","parent_name":"ECPoint"},"Enums/ECPoint.html#/s:17OpenHealthCardKit7ECPointO6xCoord6BigIntAEVSgvp":{"name":"xCoord","abstract":"<p>(Normalized) x coordinate of this ECPoint","parent_name":"ECPoint"},"Enums/ECPoint.html#/s:17OpenHealthCardKit7ECPointO6yCoord6BigIntAEVSgvp":{"name":"yCoord","abstract":"<p>(Normalized) y coordinate of this ECPoint","parent_name":"ECPoint"},"Enums/ECPoint.html#/s:17OpenHealthCardKit7ECPointO26encodedUncompressed32Bytes10Foundation4DataVvp":{"name":"encodedUncompressed32Bytes","abstract":"<p>Uncompressed data encoding of ECPoint. Hexadecimal representation should start with 0x04.","parent_name":"ECPoint"},"Enums/ECPoint.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"ECPoint"},"Enums/VerifyPinResponse.html#/s:17OpenHealthCardKit17VerifyPinResponseO7successyA2CmF":{"name":"success","abstract":"<p>Pin verification succeeded</p>","parent_name":"VerifyPinResponse"},"Enums/VerifyPinResponse.html#/s:17OpenHealthCardKit17VerifyPinResponseO6failedyACSi_tcACmF":{"name":"failed(retryCount:)","abstract":"<p>Pin verification failed, retry count is the number of retries left for the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/EgkFileSystem/Pin.html\">EgkFileSystem.Pin</a></code> type</p>","parent_name":"VerifyPinResponse"},"Enums/AutCertInfo.html#/s:17OpenHealthCardKit11AutCertInfoO02efE5R2048yA2CmF":{"name":"efAutR2048","abstract":"<p>eGK2 ESign certificate</p>","parent_name":"AutCertInfo"},"Enums/AutCertInfo.html#/s:17OpenHealthCardKit11AutCertInfoO02efE4E256yA2CmF":{"name":"efAutE256","abstract":"<p>eGK2.1 ESign certificate</p>","parent_name":"AutCertInfo"},"Enums/AutCertInfo.html#/s:17OpenHealthCardKit11AutCertInfoO5eSign0bC6Access21ApplicationIdentifierVvp":{"name":"eSign","abstract":"<p>The ESIGN file location on the card</p>","parent_name":"AutCertInfo"},"Enums/AutCertInfo.html#/s:17OpenHealthCardKit11AutCertInfoO11certificateAA13DedicatedFileVvp":{"name":"certificate","abstract":"<p>The certificate file location on the card</p>","parent_name":"AutCertInfo"},"Enums/AutCertInfo.html#/s:17OpenHealthCardKit11AutCertInfoO9algorithmAA12PSOAlgorithmOvp":{"name":"algorithm","abstract":"<p>The associated signing algorithm for the certificate type</p>","parent_name":"AutCertInfo"},"Enums/AutCertInfo.html#/s:17OpenHealthCardKit11AutCertInfoO3keyAA3KeyVvp":{"name":"key","abstract":"<p>The associated key for signing</p>","parent_name":"AutCertInfo"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO7successyA2CmF":{"name":"success","abstract":"<p>(0x9000)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16unknownExceptionyA2CmF":{"name":"unknownException","abstract":"<p>(0x6f00)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO07unknownF0yA2CmF":{"name":"unknownStatus","abstract":"<p>(0x0000)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO13dataTruncatedyA2CmF":{"name":"dataTruncated","abstract":"<p>(0x6200)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO18corruptDataWarningyA2CmF":{"name":"corruptDataWarning","abstract":"<p>(0x6281)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16endOfFileWarningyA2CmF":{"name":"endOfFileWarning","abstract":"<p>(0x6282)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO18endOfRecordWarningyA2CmF":{"name":"endOfRecordWarning","abstract":"<p>(0x6282)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO18unsuccessfulSearchyA2CmF":{"name":"unsuccessfulSearch","abstract":"<p>(0x6282)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO15fileDeactivatedyA2CmF":{"name":"fileDeactivated","abstract":"<p>(0x6282)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14fileTerminatedyA2CmF":{"name":"fileTerminated","abstract":"<p>(0x6283)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17recordDeactivatedyA2CmF":{"name":"recordDeactivated","abstract":"<p>(0x6287)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO09transportF12TransportPinyA2CmF":{"name":"transportStatusTransportPin","abstract":"<p>(0x62c1)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO09transportF8EmptyPinyA2CmF":{"name":"transportStatusEmptyPin","abstract":"<p>(0x62c7)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16passwordDisabledyA2CmF":{"name":"passwordDisabled","abstract":"<p>(0x62d0)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO21authenticationFailureyA2CmF":{"name":"authenticationFailure","abstract":"<p>(0x6300)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16noAuthenticationyA2CmF":{"name":"noAuthentication","abstract":"<p>(0x63cf)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount00yA2CmF":{"name":"retryCounterCount00","abstract":"<p>(0x63c0)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount01yA2CmF":{"name":"retryCounterCount01","abstract":"<p>(0x63c1)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount02yA2CmF":{"name":"retryCounterCount02","abstract":"<p>(0x63c2)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount03yA2CmF":{"name":"retryCounterCount03","abstract":"<p>(0x63c3)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount04yA2CmF":{"name":"retryCounterCount04","abstract":"<p>(0x63c4)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount05yA2CmF":{"name":"retryCounterCount05","abstract":"<p>(0x63c5)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount06yA2CmF":{"name":"retryCounterCount06","abstract":"<p>(0x63c6)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount07yA2CmF":{"name":"retryCounterCount07","abstract":"<p>(0x63c7)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount08yA2CmF":{"name":"retryCounterCount08","abstract":"<p>(0x63c8)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount09yA2CmF":{"name":"retryCounterCount09","abstract":"<p>(0x63c9)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount10yA2CmF":{"name":"retryCounterCount10","abstract":"<p>(0x63ca)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount11yA2CmF":{"name":"retryCounterCount11","abstract":"<p>(0x63cb)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount12yA2CmF":{"name":"retryCounterCount12","abstract":"<p>(0x63cc)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount13yA2CmF":{"name":"retryCounterCount13","abstract":"<p>(0x63cd)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount14yA2CmF":{"name":"retryCounterCount14","abstract":"<p>(0x63ce)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19retryCounterCount15yA2CmF":{"name":"retryCounterCount15","abstract":"<p>(0x63cf)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount00yA2CmF":{"name":"updateRetryWarningCount00","abstract":"<p>(0x63c0)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount01yA2CmF":{"name":"updateRetryWarningCount01","abstract":"<p>(0x63c1)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount02yA2CmF":{"name":"updateRetryWarningCount02","abstract":"<p>(0x63c2)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount03yA2CmF":{"name":"updateRetryWarningCount03","abstract":"<p>(0x63c3)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount04yA2CmF":{"name":"updateRetryWarningCount04","abstract":"<p>(0x63c4)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount05yA2CmF":{"name":"updateRetryWarningCount05","abstract":"<p>(0x63c5)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount06yA2CmF":{"name":"updateRetryWarningCount06","abstract":"<p>(0x63c6)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount07yA2CmF":{"name":"updateRetryWarningCount07","abstract":"<p>(0x63c7)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount08yA2CmF":{"name":"updateRetryWarningCount08","abstract":"<p>(0x63c8)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount09yA2CmF":{"name":"updateRetryWarningCount09","abstract":"<p>(0x63c9)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount10yA2CmF":{"name":"updateRetryWarningCount10","abstract":"<p>(0x63ca)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount11yA2CmF":{"name":"updateRetryWarningCount11","abstract":"<p>(0x63cb)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount12yA2CmF":{"name":"updateRetryWarningCount12","abstract":"<p>(0x63cc)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount13yA2CmF":{"name":"updateRetryWarningCount13","abstract":"<p>(0x63cd)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount14yA2CmF":{"name":"updateRetryWarningCount14","abstract":"<p>(0x63ce)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25updateRetryWarningCount15yA2CmF":{"name":"updateRetryWarningCount15","abstract":"<p>(0x63cf)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount00yA2CmF":{"name":"wrongSecretWarningCount00","abstract":"<p>(0x63c0)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount01yA2CmF":{"name":"wrongSecretWarningCount01","abstract":"<p>(0x63c1)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount02yA2CmF":{"name":"wrongSecretWarningCount02","abstract":"<p>(0x63c2)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount03yA2CmF":{"name":"wrongSecretWarningCount03","abstract":"<p>(0x63c3)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount04yA2CmF":{"name":"wrongSecretWarningCount04","abstract":"<p>(0x63c4)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount05yA2CmF":{"name":"wrongSecretWarningCount05","abstract":"<p>(0x63c5)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount06yA2CmF":{"name":"wrongSecretWarningCount06","abstract":"<p>(0x63c6)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount07yA2CmF":{"name":"wrongSecretWarningCount07","abstract":"<p>(0x63c7)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount08yA2CmF":{"name":"wrongSecretWarningCount08","abstract":"<p>(0x63c8)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount09yA2CmF":{"name":"wrongSecretWarningCount09","abstract":"<p>(0x63c9)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount10yA2CmF":{"name":"wrongSecretWarningCount10","abstract":"<p>(0x63ca)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount11yA2CmF":{"name":"wrongSecretWarningCount11","abstract":"<p>(0x63cb)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount12yA2CmF":{"name":"wrongSecretWarningCount12","abstract":"<p>(0x63cc)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount13yA2CmF":{"name":"wrongSecretWarningCount13","abstract":"<p>(0x63cd)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount14yA2CmF":{"name":"wrongSecretWarningCount14","abstract":"<p>(0x63ce)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO25wrongSecretWarningCount15yA2CmF":{"name":"wrongSecretWarningCount15","abstract":"<p>(0x63cf)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO13encipherErroryA2CmF":{"name":"encipherError","abstract":"<p>(0x6400)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO10keyInvalidyA2CmF":{"name":"keyInvalid","abstract":"<p>(0x6400)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16objectTerminatedyA2CmF":{"name":"objectTerminated","abstract":"<p>(0x6400)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17parameterMismatchyA2CmF":{"name":"parameterMismatch","abstract":"<p>(0x6400)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO13memoryFailureyA2CmF":{"name":"memoryFailure","abstract":"<p>(0x6581)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17wrongRecordLengthyA2CmF":{"name":"wrongRecordLength","abstract":"<p>(0x6700)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO13channelClosedyA2CmF":{"name":"channelClosed","abstract":"<p>(0x6881)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO23noMoreChannelsAvailableyA2CmF":{"name":"noMoreChannelsAvailable","abstract":"<p>(0x6981)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO21volatileKeyWithoutLcsyA2CmF":{"name":"volatileKeyWithoutLcs","abstract":"<p>(0x6981)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO13wrongFileTypeyA2CmF":{"name":"wrongFileType","abstract":"<p>(0x6981)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO08securityF12NotSatisfiedyA2CmF":{"name":"securityStatusNotSatisfied","abstract":"<p>(0x6982)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14commandBlockedyA2CmF":{"name":"commandBlocked","abstract":"<p>(0x6983)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO10keyExpiredyA2CmF":{"name":"keyExpired","abstract":"<p>(0x6983)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO15passwordBlockedyA2CmF":{"name":"passwordBlocked","abstract":"<p>(0x6983)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17keyAlreadyPresentyA2CmF":{"name":"keyAlreadyPresent","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14noKeyReferenceyA2CmF":{"name":"noKeyReference","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14noPrkReferenceyA2CmF":{"name":"noPrkReference","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14noPukReferenceyA2CmF":{"name":"noPukReference","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO8noRandomyA2CmF":{"name":"noRandom","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO017noRecordLifeCycleF0yA2CmF":{"name":"noRecordLifeCycleStatus","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17passwordNotUsableyA2CmF":{"name":"passwordNotUsable","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17wrongRandomLengthyA2CmF":{"name":"wrongRandomLength","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO27wrongRandomOrNoKeyReferenceyA2CmF":{"name":"wrongRandomOrNoKeyReference","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19wrongPasswordLengthyA2CmF":{"name":"wrongPasswordLength","abstract":"<p>(0x6985)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO11noCurrentEfyA2CmF":{"name":"noCurrentEf","abstract":"<p>(0x6986)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO13incorrectSmDoyA2CmF":{"name":"incorrectSmDo","abstract":"<p>(0x6988)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16newFileSizeWrongyA2CmF":{"name":"newFileSizeWrong","abstract":"<p>(0x6a80)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO23numberPreconditionWrongyA2CmF":{"name":"numberPreconditionWrong","abstract":"<p>(0x6a80)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19numberScenarioWrongyA2CmF":{"name":"numberScenarioWrong","abstract":"<p>(0x6a80)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17verificationErroryA2CmF":{"name":"verificationError","abstract":"<p>(0x6a80)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO15wrongCipherTextyA2CmF":{"name":"wrongCipherText","abstract":"<p>(0x6a80)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO10wrongTokenyA2CmF":{"name":"wrongToken","abstract":"<p>(0x6a80)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO19unsupportedFunctionyA2CmF":{"name":"unsupportedFunction","abstract":"<p>(0x6a81)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO12fileNotFoundyA2CmF":{"name":"fileNotFound","abstract":"<p>(0x6a82)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14recordNotFoundyA2CmF":{"name":"recordNotFound","abstract":"<p>(0x6a83)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO10dataTooBigyA2CmF":{"name":"dataTooBig","abstract":"<p>(0x6a84)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14fullRecordListyA2CmF":{"name":"fullRecordList","abstract":"<p>(0x6a84)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO14messageTooLongyA2CmF":{"name":"messageTooLong","abstract":"<p>(0x6a84)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO11outOfMemoryyA2CmF":{"name":"outOfMemory","abstract":"<p>(0x6a84)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO27fullRecordListOrOutOfMemoryyA2CmF":{"name":"fullRecordListOrOutOfMemory","abstract":"<p>(0x6a84)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO24inconsistentKeyReferenceyA2CmF":{"name":"inconsistentKeyReference","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17wrongKeyReferenceyA2CmF":{"name":"wrongKeyReference","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO11keyNotFoundyA2CmF":{"name":"keyNotFound","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16keyOrPrkNotFoundyA2CmF":{"name":"keyOrPrkNotFound","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16keyOrPwdNotFoundyA2CmF":{"name":"keyOrPwdNotFound","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO16passwordNotFoundyA2CmF":{"name":"passwordNotFound","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO11prkNotFoundyA2CmF":{"name":"prkNotFound","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO11pukNotFoundyA2CmF":{"name":"pukNotFound","abstract":"<p>(0x6a88)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO17duplicatedObjectsyA2CmF":{"name":"duplicatedObjects","abstract":"<p>(0x6a89)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO12dfNameExistsyA2CmF":{"name":"dfNameExists","abstract":"<p>(0x6a8a)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO12offsetTooBigyA2CmF":{"name":"offsetTooBig","abstract":"<p>(0x6b00)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO23instructionNotSupportedyA2CmF":{"name":"instructionNotSupported","abstract":"<p>(0x6d00)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO11customErroryA2CmF":{"name":"customError","abstract":"<p>(0x0000)</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO4codes6UInt16Vvp":{"name":"code","abstract":"<p>Code belonging to the status</p>","parent_name":"ResponseStatus"},"Enums/ResponseStatus.html#/s:17OpenHealthCardKit14ResponseStatusO10retryCountSivp":{"name":"retryCount","abstract":"<p>Undocumented</p>","parent_name":"ResponseStatus"},"Enums/CardGeneration.html#/s:17OpenHealthCardKit0C10GenerationO2g1yA2CmF":{"name":"g1","abstract":"<p>Generation G1 (&lt; 3.0.3)</p>","parent_name":"CardGeneration"},"Enums/CardGeneration.html#/s:17OpenHealthCardKit0C10GenerationO3g1PyA2CmF":{"name":"g1P","abstract":"<p>Generation G1P (3.0.3 - &lt; 4.0.0)</p>","parent_name":"CardGeneration"},"Enums/CardGeneration.html#/s:17OpenHealthCardKit0C10GenerationO2g2yA2CmF":{"name":"g2","abstract":"<p>Generation G2 (4.0.0 - &lt; 4.4.0)</p>","parent_name":"CardGeneration"},"Enums/CardGeneration.html#/s:17OpenHealthCardKit0C10GenerationO4g2_1yA2CmF":{"name":"g2_1","abstract":"<p>Generation G2.1 (4.4.0+)</p>","parent_name":"CardGeneration"},"Enums/CardGeneration.html#/s:17OpenHealthCardKit0C10GenerationO05parsecE07versionACSgSi_tFZ":{"name":"parseCardGeneration(version:)","abstract":"<p>Return the CardGeneration for ObjectSystemVersion</p>","parent_name":"CardGeneration"},"Enums/CardGeneration.html#/s:17OpenHealthCardKit0C10GenerationO05parsecE04dataACSg10Foundation4DataV_tFZ":{"name":"parseCardGeneration(data:)","abstract":"<p>Parse the CardGeneration from the <code>objectSystemVersion</code> from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CardVersion2.html\">CardVersion2</a></code></p>","parent_name":"CardGeneration"},"Enums/CardGeneration.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"CardGeneration"},"Enums/HealthCardStatus.html#/s:17OpenHealthCardKit0bC6StatusO7unknownyA2CmF":{"name":"unknown","abstract":"<p>when card type has not been determined (yet) [e.g. probing]</p>","parent_name":"HealthCardStatus"},"Enums/HealthCardStatus.html#/s:17OpenHealthCardKit0bC6StatusO5validyAcA0bC12PropertyTypeOSg_tcACmF":{"name":"valid(cardType:)","abstract":"<p>when card type has been identified by this library</p>","parent_name":"HealthCardStatus"},"Enums/HealthCardStatus.html#/s:17OpenHealthCardKit0bC6StatusO7invalidyA2CmF":{"name":"invalid","abstract":"<p>when card type could not be determined</p>","parent_name":"HealthCardStatus"},"Enums/HealthCardStatus.html#/s:17OpenHealthCardKit0bC6StatusO7isValidSbvp":{"name":"isValid","abstract":"<p>Whether the presented Card is valid in the gematik domain</p>","parent_name":"HealthCardStatus"},"Enums/HealthCardStatus.html#/s:17OpenHealthCardKit0bC6StatusO10generationAA0C10GenerationOSgvp":{"name":"generation","abstract":"<p>The generation version of the card/COS</p>","parent_name":"HealthCardStatus"},"Enums/HealthCardStatus.html#/s:17OpenHealthCardKit0bC6StatusO4typeAA0bC12PropertyTypeOSgvp":{"name":"type","abstract":"<p>The kind of gematik Healthcard (eGK, HBA, SMC-B)</p>","parent_name":"HealthCardStatus"},"Enums/HealthCardStatus.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"HealthCardStatus"},"Enums/HealthCardPropertyType.html#/s:17OpenHealthCardKit0bC12PropertyTypeO3egkyAcA0C10GenerationO_tcACmF":{"name":"egk(generation:)","abstract":"<p>eGK card with generation</p>","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:17OpenHealthCardKit0bC12PropertyTypeO3hbayAcA0C10GenerationO_tcACmF":{"name":"hba(generation:)","abstract":"<p>HBA card with generation</p>","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:17OpenHealthCardKit0bC12PropertyTypeO4smcbyAcA0C10GenerationO_tcACmF":{"name":"smcb(generation:)","abstract":"<p>SMC-B card with generation</p>","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:17OpenHealthCardKit0bC12PropertyTypeO10generationAA0C10GenerationOvp":{"name":"generation","abstract":"<p>The card generation for the card type</p>","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:17OpenHealthCardKit0bC12PropertyTypeO11autCertInfoAA03AuthI0OSgvp":{"name":"autCertInfo","abstract":"<p>Return the card&rsquo;s certificate information</p>","parent_name":"HealthCardPropertyType"},"Enums/HealthCardPropertyType.html#/s:17OpenHealthCardKit0bC12PropertyTypeO4from7cardAid0H8Version2AcA0cI0O_AA0cJ0VtKFZ":{"name":"from(cardAid:cardVersion2:)","abstract":"<p>Undocumented</p>","parent_name":"HealthCardPropertyType"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO16aesSessionKey4SMyA2CmF":{"name":"aesSessionKey4SM","abstract":"<p>aes 4sm session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO16desSessionKey4SMyA2CmF":{"name":"desSessionKey4SM","abstract":"<p>des session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO16aesSessionKey4TCyA2CmF":{"name":"aesSessionKey4TC","abstract":"<p>aes 4tc session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO16desSessionKey4TCyA2CmF":{"name":"desSessionKey4TC","abstract":"<p>des 4tc session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO13elcAsyncAdminyA2CmF":{"name":"elcAsyncAdmin","abstract":"<p>elc async admin</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO21elcRoleAuthenticationyA2CmF":{"name":"elcRoleAuthentication","abstract":"<p>elc role auth</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO12elcRoleCheckyA2CmF":{"name":"elcRoleCheck","abstract":"<p>elc async check</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO16elcSessionKey4SMyA2CmF":{"name":"elcSessionKey4SM","abstract":"<p>elc 4sm session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO16elcSessionKey4TCyA2CmF":{"name":"elcSessionKey4TC","abstract":"<p>elc 4tc session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO23rsaClientAuthenticationyA2CmF":{"name":"rsaClientAuthentication","abstract":"<p>rsa client auth</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO30rsaRoleAuthenticationOptionCVCyA2CmF":{"name":"rsaRoleAuthenticationOptionCVC","abstract":"<p>rsa role auth - cvc</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO21rsaRoleCheckOptionCVCyA2CmF":{"name":"rsaRoleCheckOptionCVC","abstract":"<p>rsa role check</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO25rsaSessionKey4SMOptionDESyA2CmF":{"name":"rsaSessionKey4SMOptionDES","abstract":"<p>rsa session key 4sm DES</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO25rsaSessionKey4TCOptionDESyA2CmF":{"name":"rsaSessionKey4TCOptionDES","abstract":"<p>rsa session key 4tc DES</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO13aesSessionKeyyA2CmF":{"name":"aesSessionKey","abstract":"<p>Table 269","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO13desSessionKeyyA2CmF":{"name":"desSessionKey","abstract":"<p>des session key</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO15rsaDecipherOAEPyA2CmF":{"name":"rsaDecipherOAEP","abstract":"<p>rsa decipher OAEP</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO19rsaDecipherPKCS1v15yA2CmF":{"name":"rsaDecipherPKCS1v15","abstract":"<p>rsa decipher PKCS1v15</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO15rsaEncipherOAEPyA2CmF":{"name":"rsaEncipherOAEP","abstract":"<p>rsa encipher OAEP</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO19rsaEncipherPKCS1v15yA2CmF":{"name":"rsaEncipherPKCS1v15","abstract":"<p>rsa encipher PKCS1v15</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO26elcSharedSecretCalculationyA2CmF":{"name":"elcSharedSecretCalculation","abstract":"<p>elc shared secret calculation</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO13sign9796v2DS2yA2CmF":{"name":"sign9796v2DS2","abstract":"<p>Table 270","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO12signPKCS1v15yA2CmF":{"name":"signPKCS1v15","abstract":"<p>signPKCS1v15</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO7signPSSyA2CmF":{"name":"signPSS","abstract":"<p>signPSS</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO9signECDSAyA2CmF":{"name":"signECDSA","abstract":"<p>signECDSA</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO10identifiers5UInt8Vvp":{"name":"identifier","abstract":"<p>Algorithm identifier byte</p>","parent_name":"PSOAlgorithm"},"Enums/PSOAlgorithm.html#/s:17OpenHealthCardKit12PSOAlgorithmO4nameSSSgvp":{"name":"name","abstract":"<p>Algorithm name</p>","parent_name":"PSOAlgorithm"},"Enums/CardError.html#/s:17OpenHealthCardKit0C5ErrorO08securityE0yACs0E0_pSgcACmF":{"name":"securityError(_:)","abstract":"<p>When a particular action is not allowed</p>","parent_name":"CardError"},"Enums/CardError.html#/s:17OpenHealthCardKit0C5ErrorO010connectionE0yACs0E0_pSgcACmF":{"name":"connectionError(_:)","abstract":"<p>When a connection failed to establish or went away unexpectedly</p>","parent_name":"CardError"},"Enums/CardError.html#/s:17OpenHealthCardKit0C5ErrorO12illegalStateyACs0E0_pSgcACmF":{"name":"illegalState(_:)","abstract":"<p>Upon encountering an illegal/unexpected state for a certain action</p>","parent_name":"CardError"},"Enums/CardError.html#/s:17OpenHealthCardKit0C5ErrorO04objcE0yACSo11NSExceptionCSgcACmF":{"name":"objcError(_:)","abstract":"<p>An ObjC NSException was thrown</p>","parent_name":"CardError"},"Enums/CardError.html":{"name":"CardError","abstract":"<p>Error cases for the (Smart)Card domain</p>"},"Enums/PSOAlgorithm.html":{"name":"PSOAlgorithm","abstract":"<p>Cryptobox command algorithm identifier - gemSpec_COS#16.1 Identifier"},"Enums/HealthCardPropertyType.html":{"name":"HealthCardPropertyType","abstract":"<p>Enum for various HealthCard types</p>"},"Enums/HealthCardStatus.html":{"name":"HealthCardStatus","abstract":"<p>HealthCard status</p>"},"Enums/CardGeneration.html":{"name":"CardGeneration","abstract":"<p>Represent the card generation of health card</p>"},"Enums/ResponseStatus.html":{"name":"ResponseStatus","abstract":"<p>Named response statuses per UInt16 status code.</p>"},"Enums/AutCertInfo.html":{"name":"AutCertInfo","abstract":"<p>MF/DF.ESIGN.EF.C.CH.AUT type</p>"},"Enums/VerifyPinResponse.html":{"name":"VerifyPinResponse","abstract":"<p>Response to a Verify Pin command on a HealthCard</p>"},"Enums/ECPoint.html":{"name":"ECPoint","abstract":"<p>Representing a point on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/EllipticCurve.html\">EllipticCurve</a></code>."},"Enums/CardAid.html":{"name":"CardAid","abstract":"<p><code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ApplicationIdentifier.html\">ApplicationIdentifier</a></code> of the application the card is initialised with</p>"},"Enums/ReadError.html":{"name":"ReadError","abstract":"<p>Domain error cases for Reading files from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HealthCardType.html\">HealthCardType</a></code> e.g. <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CardChannelType.html\">CardChannelType</a></code></p>"},"Enums/SelectError.html":{"name":"SelectError","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:17OpenHealthCardKit19dfSpecificPwdMarkers5UInt8Vvp":{"name":"dfSpecificPwdMarker","abstract":"<p>Marker for password</p>"},"Classes/NFCCardReaderController.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP11cardReadersSayAA0ceG0_pGvp":{"name":"cardReaders","parent_name":"NFCCardReaderController"},"Classes/NFCCardReaderController.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP4nameSSvp":{"name":"name","parent_name":"NFCCardReaderController"},"Classes/NFCCardReaderController.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP3add8delegateyAA0ceF8Delegate_p_tF":{"name":"add(delegate:)","parent_name":"NFCCardReaderController"},"Classes/NFCCardReaderController.html#/s:17OpenHealthCardKit0C20ReaderControllerTypeP6remove8delegateyAA0ceF8Delegate_p_tF":{"name":"remove(delegate:)","parent_name":"NFCCardReaderController"},"Classes/NFCCardReader/Error.html#/s:17OpenHealthCardKit13NFCCardReaderC5ErrorO02noC7PresentyA2EmF":{"name":"noCardPresent","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/NFCCardReader/Error.html#/s:17OpenHealthCardKit13NFCCardReaderC5ErrorO17transferExceptionyAESS_tcAEmF":{"name":"transferException(name:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/NFCCardReader/Error.html#/s:17OpenHealthCardKit13NFCCardReaderC5ErrorO11sendTimeoutyA2EmF":{"name":"sendTimeout","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/NFCCardReader/Error.html#/s:17OpenHealthCardKit13NFCCardReaderC5ErrorO010connectionG0AA0cG0Ovp":{"name":"connectionError","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/NFCCardReader/Error.html#/s:17OpenHealthCardKit13NFCCardReaderC5ErrorO12illegalStateAA0cG0Ovp":{"name":"illegalState","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC19keyDiscoveryMessageSSvpZ":{"name":"keyDiscoveryMessage","abstract":"<p>The Use-case message key for the <code>connect()</code> method to display to the user</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC17keyConnectMessageSSvpZ":{"name":"keyConnectMessage","abstract":"<p>The message to display to the user when the secure PACE channel is being setup</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC05keyNoC7MessageSSvpZ":{"name":"keyNoCardMessage","abstract":"<p>The no card found error message when no card is found by <code>connect()</code></p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC011keyMultipleC7MessageSSvpZ":{"name":"keyMultipleCardMessage","abstract":"<p>The multiple cards detected error message when more than 1 card is found by <code>connect()</code></p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC014keyUnsupportedC7MessageSSvpZ":{"name":"keyUnsupportedCardMessage","abstract":"<p>The unsupported card message</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC18keyConnectionErrorSSvpZ":{"name":"keyConnectionError","abstract":"<p>The generic no connection message</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC14controllerNameACSS_tcfc":{"name":"init(controllerName:)","abstract":"<p>Undocumented</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit0C10ReaderTypeP4nameSSvp":{"name":"name","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit0C10ReaderTypeP11cardPresentSbvp":{"name":"cardPresent","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit0C10ReaderTypeP02onC15PresenceChangedyyyAaB_pcF":{"name":"onCardPresenceChanged(_:)","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit0C10ReaderTypeP7connectyAA0cF0_pSgSDySSypGKF":{"name":"connect(_:)","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC14startDiscovery4withySDyS2SG_tF":{"name":"startDiscovery(with:)","abstract":"<p>(Re-)Start polling for NFC card</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC17invalidateSession5errorySSSg_tF":{"name":"invalidateSession(error:)","abstract":"<p>Close session when a session has been started</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC03tagF22SessionDidBecomeActiveyXeXeF":{"name":"tagReaderSessionDidBecomeActive(_:)","abstract":"<p>Undocumented</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReader.html#/s:17OpenHealthCardKit13NFCCardReaderC03tagF7SessionyXeXeF":{"name":"tagReaderSession(_:didDetect:)","abstract":"<p>Undocumented</p>","parent_name":"NFCCardReader"},"Classes/NFCCardReaderProvider.html#/s:17OpenHealthCardKit21NFCCardReaderProviderC4nameSSvpZ":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"NFCCardReaderProvider"},"Classes/NFCCardReaderProvider.html#/c:@M@OpenHealthCardKit@objc(pl)CardReaderProviderType(cpy)descriptor":{"name":"descriptor","parent_name":"NFCCardReaderProvider"},"Classes/NFCCardReaderProvider.html#/c:@M@OpenHealthCardKit@objc(pl)CardReaderProviderType(cm)provideCardReaderController":{"name":"provideCardReaderController()","parent_name":"NFCCardReaderProvider"},"Classes/KeyAgreement/Algorithm.html#/s:17OpenHealthCardKit12KeyAgreementC9AlgorithmO25idPaceEcdhGmAesCbcCmac128yA2EmF":{"name":"idPaceEcdhGmAesCbcCmac128","abstract":"<p>id-PACE-ECDH-GM-AES-CBC-CMAC-128</p>","parent_name":"Algorithm"},"Classes/KeyAgreement/Algorithm.html#/s:17OpenHealthCardKit12KeyAgreementC9AlgorithmO016negotiateSessionE04card3can12writeTimeout04readM07Combine12AnyPublisherVyAA15SecureMessaging_ps5Error_pGAA0bC4Type_p_AA3CANVS2dtF":{"name":"negotiateSessionKey(card:can:writeTimeout:readTimeout:)","abstract":"<p>Negotiate a common key with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HealthCard.html\">HealthCard</a></code> given its <code>CardAccessNumber</code></p>","parent_name":"Algorithm"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO15illegalArgumentyA2EmF":{"name":"illegalArgument","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO026unexpectedFormedAnswerFromC0yA2EmF":{"name":"unexpectedFormedAnswerFromCard","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO31resultOfEcArithmeticWasInfiniteyA2EmF":{"name":"resultOfEcArithmeticWasInfinite","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO026macPcdVerificationFailedOnC0yA2EmF":{"name":"macPcdVerificationFailedOnCard","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO32macPiccVerificationFailedLocallyyA2EmF":{"name":"macPiccVerificationFailedLocally","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO07noValidbC6StatusyA2EmF":{"name":"noValidHealthCardStatus","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO02efC18AccessNotAvailableyA2EmF":{"name":"efCardAccessNotAvailable","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html#/s:17OpenHealthCardKit12KeyAgreementC5ErrorO011unsupportedeF9AlgorithmyAE04ASN1D016ObjectIdentifierVcAEmF":{"name":"unsupportedKeyAgreementAlgorithm(_:)","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/KeyAgreement/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"KeyAgreement"},"Classes/KeyAgreement/Algorithm.html":{"name":"Algorithm","abstract":"<p>Algorithm the PACE key agreement negotiation is based on.</p>","parent_name":"KeyAgreement"},"Classes/KeyDerivationFunction/Mode.html#/s:17OpenHealthCardKit21KeyDerivationFunctionC4ModeO3encyA2EmF":{"name":"enc","abstract":"<p>Mode key derivation for encoding</p>","parent_name":"Mode"},"Classes/KeyDerivationFunction/Mode.html#/s:17OpenHealthCardKit21KeyDerivationFunctionC4ModeO3macyA2EmF":{"name":"mac","abstract":"<p>Mode key derivation for MAC calculation</p>","parent_name":"Mode"},"Classes/KeyDerivationFunction/Mode.html#/s:17OpenHealthCardKit21KeyDerivationFunctionC4ModeO8passwordyA2EmF":{"name":"password","abstract":"<p>Mode key derivation for password</p>","parent_name":"Mode"},"Classes/KeyDerivationFunction/KeyFuncType.html#/s:17OpenHealthCardKit21KeyDerivationFunctionC0E8FuncTypeO6aes128yA2EmF":{"name":"aes128","abstract":"<p>Target function of family AES128</p>","parent_name":"KeyFuncType"},"Classes/KeyDerivationFunction/KeyFuncType.html":{"name":"KeyFuncType","abstract":"<p>Type of en-/decryption function</p>","parent_name":"KeyDerivationFunction"},"Classes/KeyDerivationFunction/Mode.html":{"name":"Mode","abstract":"<p>Mode of use of derived key</p>","parent_name":"KeyDerivationFunction"},"Classes/KeyDerivationFunction.html#/s:17OpenHealthCardKit21KeyDerivationFunctionC06deriveE04from8funcType4mode10Foundation4DataVAJ_AC0e4FuncK0OAC4ModeOtFZ":{"name":"deriveKey(from:funcType:mode:)","abstract":"<p>Derives a key from a (shared) secret.","parent_name":"KeyDerivationFunction"},"Classes/HealthCard/Error.html#/s:17OpenHealthCardKit0bC0C5ErrorO11operationalyA2EmF":{"name":"operational","abstract":"<p>Operational error of the underlying card</p>","parent_name":"Error"},"Classes/HealthCard/Error.html#/s:17OpenHealthCardKit0bC0C5ErrorO18unexpectedResponseyAeA0G6StatusO_AHtcAEmF":{"name":"unexpectedResponse(actual:expected:)","abstract":"<p>Underlying card responds with an unexpected status</p>","parent_name":"Error"},"Classes/HealthCard/Error.html#/s:17OpenHealthCardKit0bC0C5ErrorO07unknownC4TypeyAeA21ApplicationIdentifierVSg_tcAEmF":{"name":"unknownCardType(aid:)","abstract":"<p>The application identifier was not found or recognized</p>","parent_name":"Error"},"Classes/HealthCard/Error.html#/s:17OpenHealthCardKit0bC0C5ErrorO17illegalGenerationyAeA0C8Version2V_tcAEmF":{"name":"illegalGeneration(version:)","abstract":"<p>When the CardVersion2 file could not be read/parsed</p>","parent_name":"Error"},"Classes/HealthCard/Error.html#/s:17OpenHealthCardKit0bC0C5ErrorO011unsupportedC4TypeyA2EmF":{"name":"unsupportedCardType","abstract":"<p>Unsupported card type</p>","parent_name":"Error"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C07currentC7ChannelAA0cF4Type_pvp":{"name":"currentCardChannel","abstract":"<p>The current card channel to use to send/receive APDUs over</p>","parent_name":"HealthCard"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C6statusAA0bC6StatusOvp":{"name":"status","abstract":"<p>The status of the card and channel</p>","parent_name":"HealthCard"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C4card6statusAcA0C4Type_p_AA0bC6StatusOtKcfc":{"name":"init(card:status:)","abstract":"<p>Initialize a HealthCard with a card channel and set its initial status</p>","parent_name":"HealthCard"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C13channelNumberSivp":{"name":"channelNumber","abstract":"<p>The number of the current card channel.</p>","parent_name":"HealthCard"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C23extendedLengthSupportedSbvp":{"name":"extendedLengthSupported","abstract":"<p>Identify whether the current card channel supports APDU extended length commands/responses.</p>","parent_name":"HealthCard"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C16maxMessageLengthSivp":{"name":"maxMessageLength","abstract":"<p>Max length of a APDU body in bytes supported by the current card channel.</p>","parent_name":"HealthCard"},"Classes/HealthCard.html#/s:17OpenHealthCardKit0bC0C17maxResponseLengthSivp":{"name":"maxResponseLength","abstract":"<p>Max length of a APDU response supported by the current card channel.</p>","parent_name":"HealthCard"},"Classes/HealthCard/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"HealthCard"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO17offsetOutOfBoundsyAESi_SbtcAEmF":{"name":"offsetOutOfBounds(_:usingShortFileIdentifier:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO25recordDataSizeOutOfBoundsyAE10Foundation0J0VcAEmF":{"name":"recordDataSizeOutOfBounds(_:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO27expectedLengthMustNotBeZeroyA2EmF":{"name":"expectedLengthMustNotBeZero","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO31expectedLengthNotAWildcardValueyAESicAEmF":{"name":"expectedLengthNotAWildcardValue(_:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO14wrongMACLengthyAESicAEmF":{"name":"wrongMACLength(_:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO15wrongHashLengthyAESi_SitcAEmF":{"name":"wrongHashLength(_:expected:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO20wrongSignatureLengthyAESi_SitcAEmF":{"name":"wrongSignatureLength(_:expected:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO14unsupportedKeyyAESo03SecJ3RefacAEmF":{"name":"unsupportedKey(_:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO11illegalSizeyAESi_SitcAEmF":{"name":"illegalSize(_:expected:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO12illegalValueyAESi_SSSnySiGtcAEmF":{"name":"illegalValue(_:for:expected:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder/InvalidArgument.html#/s:17OpenHealthCardKit0bC14CommandBuilderC15InvalidArgumentO10illegalOidyAE04ASN1D016ObjectIdentifierVcAEmF":{"name":"illegalOid(_:)","abstract":"<p>Undocumented</p>","parent_name":"InvalidArgument"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3cla3ins2p12p24data2ne16responseStatusesACs5UInt8V_A3L10Foundation4DataVSgSiSgSDys6UInt16VAA14ResponseStatusOGtcfc":{"name":"init(cla:ins:p1:p2:data:ne:responseStatuses:)","abstract":"<p>Constructor of this builder containing all parameters.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderCACycfc":{"name":"init()","abstract":"<p>Convenience constructor initializing this class with some default values to be overwritten.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC5buildAA0bcE0VyKF":{"name":"build()","abstract":"<p>Constructs a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HealthCardCommand.html\">HealthCardCommand</a></code> from this builder instance.","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC7builder4fromAcA0bcE0V_tFZ":{"name":"builder(from:)","abstract":"<p>Deconstruct(s) a given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HealthCardCommand.html\">HealthCardCommand</a></code> back into a builder.","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set3claACs5UInt8V_tF":{"name":"set(cla:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>cla</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set3insACs5UInt8V_tF":{"name":"set(ins:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>ins</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set2p1ACs5UInt8V_tF":{"name":"set(p1:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>p1</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set2p2ACs5UInt8V_tF":{"name":"set(p2:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>p2</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set4dataAC10Foundation4DataVSg_tF":{"name":"set(data:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>data</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3add4dataAC10Foundation4DataV_tF":{"name":"add(data:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>data</em> appended to existing data.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set2neACSiSg_tF":{"name":"set(ne:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>ne</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC3set16responseStatusesACSDys6UInt16VAA14ResponseStatusOG_tF":{"name":"set(responseStatuses:)","abstract":"<p>Returns a <code>HealthCardCommandBuilder</code> with <em>responseStatuses</em> set.</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC10sfidMarkers5UInt8VvpZ":{"name":"sfidMarker","abstract":"<p>Marker for setting the first bit (i.e. <strong>0x80</strong>) when working with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ShortFileIdentifier.html\">ShortFileIdentifier</a></code></p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder/InvalidArgument.html":{"name":"InvalidArgument","abstract":"<p>Undocumented</p>","parent_name":"HealthCardCommandBuilder"},"Classes/HealthCardCommandBuilder.html#/s:17OpenHealthCardKit0bC14CommandBuilderC13checkValidity6offset24usingShortFileIdentifierySi_SbtKFZ":{"name":"checkValidity(offset:usingShortFileIdentifier:)","abstract":"<p>Undocumented</p>","parent_name":"HealthCardCommandBuilder"},"Classes/CardReaderControllerObjcWrapper.html#/s:17OpenHealthCardKit0C27ReaderControllerObjcWrapperC5valueAA0ceF4Type_pvp":{"name":"value","abstract":"<p>The bridged CardReaderController</p>","parent_name":"CardReaderControllerObjcWrapper"},"Classes/CardReaderControllerObjcWrapper.html#/s:17OpenHealthCardKit0C27ReaderControllerObjcWrapperCyAcA0ceF4Type_pcfc":{"name":"init(_:)","abstract":"<p>Initialize the wrapper with the wrapped controller.</p>","parent_name":"CardReaderControllerObjcWrapper"},"Classes/ProviderDescriptor.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)name":{"name":"name","parent_name":"ProviderDescriptor"},"Classes/ProviderDescriptor.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)license":{"name":"license","parent_name":"ProviderDescriptor"},"Classes/ProviderDescriptor.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)providerDescription":{"name":"providerDescription","parent_name":"ProviderDescriptor"},"Classes/ProviderDescriptor.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)shortDescription":{"name":"shortDescription","parent_name":"ProviderDescriptor"},"Classes/ProviderDescriptor.html#/c:@M@OpenHealthCardKit@objc(pl)ProviderDescriptorType(py)providerClassName":{"name":"providerClassName","parent_name":"ProviderDescriptor"},"Classes/ProviderDescriptor.html#/s:17OpenHealthCardKit18ProviderDescriptorCyACSS_S4Stcfc":{"name":"init(_:_:_:_:_:)","abstract":"<p>Undocumented</p>","parent_name":"ProviderDescriptor"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV3cla3ins2p12p22neAEs5UInt8V_A3LSiSgtKcfc":{"name":"init(cla:ins:p1:p2:ne:)","abstract":"<p>Constructs a CommandAPDU from the four header bytes.","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV3cla3ins2p12p24data2neAEs5UInt8V_A3M10Foundation4DataVSgSiSgtKcfc":{"name":"init(cla:ins:p1:p2:data:ne:)","abstract":"<p>Constructs a CommandAPDU from the four header bytes, command data,","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV4data10Foundation4DataVSgvp":{"name":"data","abstract":"<p>APDU body data</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV3clas5UInt8Vvp":{"name":"cla","abstract":"<p>APDU class identifier</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV3inss5UInt8Vvp":{"name":"ins","abstract":"<p>APDU Instruction</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV2p1s5UInt8Vvp":{"name":"p1","abstract":"<p>APDU P1</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV2p2s5UInt8Vvp":{"name":"p2","abstract":"<p>APDU P2</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV2neSiSgvp":{"name":"ne","abstract":"<p>APDU Le - Expected length in response body</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV2ncSivp":{"name":"nc","abstract":"<p>APDU Lc - Command body length</p>","parent_name":"Command"},"Classes/APDU/Command.html#/s:17OpenHealthCardKit4APDUC7CommandV5bytes10Foundation4DataVvp":{"name":"bytes","abstract":"<p>APDU raw</p>","parent_name":"Command"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV4apduAE10Foundation4DataV_tKcfc":{"name":"init(apdu:)","abstract":"<p>Initialize APDU response with raw Data.</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV2OKAEvpZ":{"name":"OK","abstract":"<p>Success response [0x9000]</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV4body3sw13sw2AE10Foundation4DataV_s5UInt8VAMtKcfc":{"name":"init(body:sw1:sw2:)","abstract":"<p>Convenience initializer for APDU repsonses that come in three parts</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV4data10Foundation4DataVSgvp":{"name":"data","abstract":"<p>The response body</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit12ResponseTypeP2nrSivp":{"name":"nr","abstract":"<p>The response body length</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV3sw1s5UInt8Vvp":{"name":"sw1","abstract":"<p>The response status word - upper byte</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV3sw2s5UInt8Vvp":{"name":"sw2","abstract":"<p>The response status word - lower byte</p>","parent_name":"Response"},"Classes/APDU/Response.html#/s:17OpenHealthCardKit4APDUC8ResponseV2sws6UInt16Vvp":{"name":"sw","abstract":"<p>The response status word</p>","parent_name":"Response"},"Classes/APDU/Error.html#/s:17OpenHealthCardKit4APDUC5ErrorO23commandBodyDataTooLargeyA2EmF":{"name":"commandBodyDataTooLarge","abstract":"<p>when the APDU body exceeds 65535</p>","parent_name":"Error"},"Classes/APDU/Error.html#/s:17OpenHealthCardKit4APDUC5ErrorO33expectedResponseLengthOutOfBoundsyA2EmF":{"name":"expectedResponseLengthOutOfBounds","abstract":"<p>when the expected APDU response length is out of bounds [0, 65536]</p>","parent_name":"Error"},"Classes/APDU/Error.html#/s:17OpenHealthCardKit4APDUC5ErrorO24insufficientResponseDatayAE10Foundation0I0V_tcAEmF":{"name":"insufficientResponseData(data:)","abstract":"<p>when the APDU response data is not at least two bytes long</p>","parent_name":"Error"},"Classes/APDU/Error.html":{"name":"Error","abstract":"<p>Undocumented</p>","parent_name":"APDU"},"Classes/APDU.html#/s:17OpenHealthCardKit4APDUC27expectedLengthWildcardShortSivpZ":{"name":"expectedLengthWildcardShort","abstract":"<p>Value for when wildcardShort for expected length encoding is needed</p>","parent_name":"APDU"},"Classes/APDU.html#/s:17OpenHealthCardKit4APDUC30expectedLengthWildcardExtendedSivpZ":{"name":"expectedLengthWildcardExtended","abstract":"<p>Value for when wildcardExtended for expected length encoding is needed</p>","parent_name":"APDU"},"Classes/APDU/Response.html":{"name":"Response","abstract":"<p>An  APDU response per ISO/IEC 7816-4. It consists of a conditional body and a two byte trailer.","parent_name":"APDU"},"Classes/APDU/Command.html":{"name":"Command","abstract":"<p>An APDU Command per ISO/IEC 7816-4.","parent_name":"APDU"},"Classes/CardReaderControllerManager.html#/s:17OpenHealthCardKit0C23ReaderControllerManagerC6sharedAA0cefG4Type_pvpZ":{"name":"shared","abstract":"<p>The main/shared instance for general purpose use.</p>","parent_name":"CardReaderControllerManager"},"Classes/CardReaderControllerManager.html#/s:17OpenHealthCardKit0C23ReaderControllerManagerC04cardE19ProviderDescriptorsSayAA0I14DescriptorType_pGvp":{"name":"cardReaderProviderDescriptors","abstract":"<p>An array of all complete Provider Descriptors of each card reader provider available</p>","parent_name":"CardReaderControllerManager"},"Classes/CardReaderControllerManager.html#/s:17OpenHealthCardKit0C23ReaderControllerManagerC04cardE11ControllersSayAA0ceF4Type_pGvp":{"name":"cardReaderControllers","abstract":"<p>The lazy loaded CardReaderControllers that where found by protocol reflection.</p>","parent_name":"CardReaderControllerManager"},"Classes/CardReaderControllerManager.html":{"name":"CardReaderControllerManager","abstract":"<p>The <code>CardReaderControllerManager</code> acts as a typical Java ServiceLoader for loading <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CardReaderControllerType.html\">CardReaderControllerType</a></code>"},"Classes/APDU.html":{"name":"APDU","abstract":"<p>Concrete APDU command + response implementation</p>"},"Classes/ProviderDescriptor.html":{"name":"ProviderDescriptor","abstract":"<p>Default ProviderDescriptor</p>"},"Classes/CardReaderControllerObjcWrapper.html":{"name":"CardReaderControllerObjcWrapper","abstract":"<p>We need to use a wrapper to bridge the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CardReaderControllerType.html\">CardReaderControllerType</a></code> since its Type cannot be represented in ObjC</p>"},"Classes/HealthCardCommandBuilder.html":{"name":"HealthCardCommandBuilder","abstract":"<p>Builder to assemble an instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/HealthCardCommand.html\">HealthCardCommand</a></code> which is holding a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CommandType.html\">CommandType</a></code>"},"Classes/HealthCard.html":{"name":"HealthCard","abstract":"<p>HealthCard is the class that is used to bind the CardReaderProviderAPI channel to the HealthCardControl layer</p>"},"Classes/KeyDerivationFunction.html":{"name":"KeyDerivationFunction","abstract":"<p>This class provides functionality to derive (de-/ encryption) keys from given data.</p>"},"Classes/KeyAgreement.html":{"name":"KeyAgreement","abstract":"<p>Holds functionality to negotiate a common key with a given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HealthCard.html\">HealthCard</a></code> and a <code>CardAccessNumber</code>.</p>"},"Classes/NFCCardReaderProvider.html":{"name":"NFCCardReaderProvider","abstract":"<p>Undocumented</p>"},"Classes/NFCCardReader.html":{"name":"NFCCardReader","abstract":"<p>Undocumented</p>"},"Classes/NFCCardReaderController.html":{"name":"NFCCardReaderController","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}